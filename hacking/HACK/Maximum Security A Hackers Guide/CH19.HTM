<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>

<HEAD>
	
	<TITLE>Maximum Security -- Ch 19 -- T</TITLE>
</HEAD>

<BODY TEXT="#000000" BGCOLOR="#FFFFFF">

<CENTER>
<H1><IMG SRC="samsnet.gif" tppabs="http://pbs.mcp.com/ebooks/1575212684/button/samsnet.gif" WIDTH="171" HEIGHT="66" ALIGN="BOTTOM" BORDER="0"><BR>
<FONT COLOR="#000077">Maximum Security: </FONT></H1>
</CENTER>
<CENTER>
<H2><FONT COLOR="#000077">A Hacker's Guide to Protecting Your Internet Site and Network</FONT></H2>
</CENTER>
<CENTER>
<P><A HREF="ch18.htm" tppabs="http://pbs.mcp.com/ebooks/1575212684/ch18/ch18.htm"><IMG SRC="previous.gif" tppabs="http://pbs.mcp.com/ebooks/1575212684/button/previous.gif" WIDTH="128" HEIGHT="28"
ALIGN="BOTTOM" ALT="Previous chapter" BORDER="0"></A><A HREF="ch20.htm" tppabs="http://pbs.mcp.com/ebooks/1575212684/ch20/ch20.htm"><IMG
SRC="next.gif" tppabs="http://pbs.mcp.com/ebooks/1575212684/button/next.gif" WIDTH="128" HEIGHT="28" ALIGN="BOTTOM" ALT="Next chapter"
BORDER="0"></A><A HREF="index-38.htm" tppabs="http://pbs.mcp.com/ebooks/1575212684/index.htm"><IMG SRC="contents.gif" tppabs="http://pbs.mcp.com/ebooks/1575212684/button/contents.gif" WIDTH="128"
HEIGHT="28" ALIGN="BOTTOM" ALT="Contents" BORDER="0"></A> 
<HR>

</CENTER>
<CENTER>
<H1><FONT COLOR="#000077">19</FONT></H1>
</CENTER>
<CENTER>
<H1><FONT COLOR="#000077">VAX/VMS</FONT></H1>
</CENTER>
<P>In this chapter we are going to take a stroll down memory lane. In order to make
the trip pleasurable for all readers, I thought I would make this a truly historical
treatment. Therefore, we will start with the rise of Digital Equipment Corporation
(DEC), the company that manufactured the once-popular product the VAX.</P>
<P>In one way or another, DEC has always been there at critical moments in computer
history. (You may recall that Ken Thompson was first hacking UNIX on a DEC PDP-10.)


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>To appreciate just how
	long DEC has been delivering computer products to the industry, take a moment to
	catch this link: <A HREF="javascript:if(confirm('http://www.cs.orst.edu/~crowl/history/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.cs.orst.edu/%7Ecrowl/history/'" tppabs="http://www.cs.orst.edu/%7Ecrowl/history/"><TT>http://www.cs.orst.edu/~crowl/history/</TT></A>.
	
<HR>


</BLOCKQUOTE>

<P>This link will take you to Lawrence Crowl's wonderful computer history page, which
shows photographs of machines that mark milestones in our computer culture (starting
with the very first computer ever constructed by Charles Babbage, circa 1823). The
first DEC PDP-1 appears on that page.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>To get a full-screen
	view of that machine, catch this link: <A HREF="javascript:if(confirm('http://www.cs.orst.edu/~crowl/history/dec_pdp1_2.full.jpg  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.cs.orst.edu/%7Ecrowl/history/dec_pdp1_2.full.jpg'" tppabs="http://www.cs.orst.edu/%7Ecrowl/history/dec_pdp1_2.full.jpg"><TT>http://www.cs.orst.edu/~crowl/history/dec_pdp1_2.full.jpg</TT></A>.
	
<HR>


</BLOCKQUOTE>

<P>The machine looked, quite frankly, like a prop in some terrible B movie from the
1950s--something you would expect to see in the laboratory of a mad scientist. Incredibly,
there was a time when such &quot;technology&quot; was the state of the art. Well,
DEC moved on pretty quickly, to produce a wide range of products, including the very
first minicomputer, the DEC PDP-8.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>You can see this machine
	on Crowl's page as well, located full size at <A HREF="javascript:if(confirm('http://www.cs.orst.edu/~crowl/history/dec_pdp8.full.jpg  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.cs.orst.edu/%7Ecrowl/history/dec_pdp8.full.jpg'" tppabs="http://www.cs.orst.edu/%7Ecrowl/history/dec_pdp8.full.jpg"><TT>http://www.cs.orst.edu/~crowl/history/dec_pdp8.full.jpg</TT></A>.
	
<HR>


</BLOCKQUOTE>

<P>In 1978, DEC created the first VAX (virtual address extension), the Digital VAX
11/780. This machine offered 32-bit architecture and 1MIPS performance. By standards
of the day, the 11/780 was powerful and fast. (It was also backward compatible with
the PDP line that preceded it.) The pricetag? A mere $200,000.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>NOTE:</B></FONT><B> </B>MIPS refers to million instructions
	per second. 
<HR>


</BLOCKQUOTE>

<P>Curiously, the 11/780 became so popular that it would establish itself as the
benchmark for the MIPS index. In other words, it became the yardstick by which to
measure performance of all workstations that later followed. (This occurred despite
the fact that the IBM 370/158 was reportedly comparable in terms of speed and processing
power. For reasons unknown to me, the IBM 370/158 never reached the popularity status
of the 11/870.)</P>
<P>So, to reiterate, the 11/870 was a $200,000 machine that could do roughly 1 million
instructions per second. Fantastic. Today, if you were to advertise this machine
for sale on the Internet, you would have to pay the buyer to haul it away. It is
considered by today's standards either junk or, perhaps more charitably, a collector's
item. However, one thing made the 11/870 a special innovation and still singles it
out from other machines in computer history: The 11/870 could support two operating
systems. One was a system--UNIX--that was known reasonably well at the time. The
other system was something a little different. It was called VMS. We will be examining
VMS in just a moment. First, however, I want to give you an idea of what the VAX
was all about.</P>
<P>The VAX was a multiuser system. Many readers may not be old enough to remember
the VAXstations, so I'll offer a little description. The MicroVAX stands nearly 3
feet tall. On the right side of the machine is a panel that, when opened, reveals
the cards. These cards are quite large, although not nearly as large as the panels
of, say, a SPARCstation 4/330 VME deskside computer. (But certainly larger than most
modern motherboards for personal computers.)</P>
<P>The Terminal is a VT220, with a viewing screen of approximately 8<SUP>1</SUP>/<SUB>2</SUB>
inches. At the back of the terminal are various connectors. These include a data
lead connection, a printer connection, and a serial port. The serial port could be
set to an amazing 19200 baud and terminal emulations available included VT220 and
VT100. If you connect a modem to the terminal, you have to set modem commands by
hand. (In other words, you would have to send raw modem commands from a blank screen
that sports a blinking cursor. Typically, you would dial by issuing the command <TT>ATDT5551212</TT>,
for example.)</P>
<P>Contained within the terminal is firmware. This is software hard-coded into the
board itself. (PC users should think of firmware in exactly the same way as the CMOS.
It is a small software module that performs a limited number of tasks, including
setting the machine's parameters.) Unfortunately, there is no facility by which to
capture a figure of the screen, so I must describe it. When the terminal boots, you
are presented with a copyright screen and then a blank screen with a blinking cursor.
The terminal is then ready to accept commands. To manipulate the settings in the
firmware, you choose the F3 (function 3, or Setup) key. This brings up a menu at
the bottom of the screen, where you can review and change various settings. These
include not only the way that communications are conducted, but also how the screen
is laid out and behaves. For example, you have a choice of either an amber background
and black foreground or the reverse. You can specify a typewriter keyboard or Data
mode, which is more commonly used when interfacing directly with the VAX. You can
also manipulate the number of characters per line and lines per screen. (Additionally,
the firmware has short help messages embedded within it. These generally appear at
the bottom of the screen, in the status area, as do the setting values for each facet
of your environment. These may indicate which printer you are using, whether you
want local echo, whether you want type-ahead mode, and so forth.) No mouse, hard
disk drive, floppy drive, or other components are either present or required.</P>
<P>You have a wide range of choices regarding communication. For example, you can
change the bits (typically 7 or 8) and also the parity of these (none, odd, even).
This makes the VT220 terminal valuable not only to interface with VAXen (slang for
VAX machines), but also a wide variety of UNIX machines. For example, you can use
a VT220 terminal as a &quot;head&quot; for a workstation that otherwise has no monitor.
This can generally be done by plugging the terminal into the first serial port of
the workstation. (For most versions of UNIX, you generally need to strip the eighth
bit.)


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>TIP:</B></FONT><B> </B>For Linux hackers: You can also &quot;add&quot;
	an Internet node to your box using such a terminal. To do so, you plug the terminal
	into either COM1 or COM2. You then edit <TT>inittab</TT> to respawn another instance
	of <TT>getty</TT> on that port. For this to work, you need to ensure that the cable
	used is a null modem cable. You also should set the emulation to VT100. When the
	Linux box reboots, a login prompt will appear on the VT220. From there, log in as
	any valid user, and you are ready. This is significantly valuable, especially if
	you are trying to train someone in programming or navigation of the Net via a CLI
	(command-line interface). It is important to note that if you are using the same
	COM port that normally supports your mouse, you need to kill <TT>gpm</TT> (general
	purpose mouse support). 
<HR>


</BLOCKQUOTE>

<P>These terminals, while intended for use with the VAX, can also be used as the
most inexpensive method ever of accessing the Internet. Naturally, you need an old-style
dial-up connection to do so (perhaps via Delphi), but there is no comparison in the
price. Such terminals can now be purchased for $20. Add to this the price of a 19200
baud modem, and you are done. They are also great for connecting to local BBSs.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>TIP:</B></FONT><B> </B>An interesting point here: Such a
	terminal does not have environment variables per se and therefore reports none. All
	the environment variables are obtained from whatever shell you happen to acquire
	on the remote machine. 
<HR>


</BLOCKQUOTE>

<P>These terminals are used to connect to the VAX. (Note, too, that I have described
only very early implementations of VT terminals. Much later models supported various
types of colors and graphics not available to the early VT100 and VT220 terminals.
These newer models are extremely functional but can run as high as several hundred
dollars. Good examples are the VT330 and VT340.)</P>
<P>Finally, you can connect to a VAX without such a terminal. Typically, this is
done using PC software that supports VT100 terminal emulation. (Kermit is another
popular and compatible emulation.)
<H2><FONT COLOR="#000077"><B>VMS</B></FONT></H2>
<P>The VMS (Virtual Memory System) operating system is unique, but bears similarities
to several others. Logging in works much as it does on a UNIX system. You are presented
with a login prompt (<TT>Username:</TT>) and a password prompt. If you enter the
correct information, you are dropped to a prompt represented by a dollar (<TT>$</TT>)
sign. You are also given a series of values when you log in, including your username,
your process ID, and so forth.</P>
<P>Some common VMS commands are listed in Table 19.1.
<H4><FONT COLOR="#000077"><B>Table 19.1. Common VMS commands.</B></FONT></H4>
<P>
<TABLE BORDER="1">
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><I>Command</I></TD>
		<TD ALIGN="LEFT" VALIGN="TOP"><I>Purpose</I></TD>
	</TR>
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><TT>HELP [args]</TT></TD>
		<TD ALIGN="LEFT" VALIGN="TOP">If issued alone (without arguments), this command will bring up the prompt <TT>Topic?</TT>.
			The <TT>HELP</TT> command is generally followed by whatever command you want to learn
			about.</TD>
	</TR>
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><TT>COPY [arg1 arg2]</TT></TD>
		<TD ALIGN="LEFT" VALIGN="TOP">Will copy an existing file or files to another file or directory.</TD>
	</TR>
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><TT>DIRECTORY</TT></TD>
		<TD ALIGN="LEFT" VALIGN="TOP">Works very much like the DOS command <TT>dir</TT>, giving the contents of a directory
			and the attributes associated with the files therein.</TD>
	</TR>
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><TT>MAIL</TT></TD>
		<TD ALIGN="LEFT" VALIGN="TOP">Invokes the e-mail program interface for VAX. This works (roughly) like standard
			mail in UNIX. When preparing to compose a message, you are prompted for recipient
			and subject.</TD>
	</TR>
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><TT>LOOK</TT></TD>
		<TD ALIGN="LEFT" VALIGN="TOP">The VAX equivalent to the UNIX command <TT>ps</TT>, <TT>LOOK</TT> shows you your
			current processes.</TD>
	</TR>
</TABLE>



<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>TIP:</B></FONT><B> </B>There is a nice table of command
	translations from VAX to UNIX. The table has been around for a while and basically
	offers UNIX users and others a brief reference. It is located at <A HREF="javascript:if(confirm('http://egret.ma.iup.edu/~whmf/vms_to_unix.html  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://egret.ma.iup.edu/%7Ewhmf/vms_to_unix.html'" tppabs="http://egret.ma.iup.edu/%7Ewhmf/vms_to_unix.html"><TT>http://egret.ma.iup.edu/~whmf/vms_to_unix.html</TT></A>.
	You might want to examine that table now, because I will refer to a few of those
	commands throughout this chapter. 
<HR>


</BLOCKQUOTE>

<P>VMS has many of the amenities of other operating systems. The commands may be
just slightly different. For example, the C shell in UNIX has a facility that will
recall commands previously typed at the prompt. This facility is called <TT>history</TT>.
(DOS has a similar command module, usually loaded at boot time, called <TT>DOSkey</TT>.)
In VMS, you can recall commands recently typed by holding down the Ctrl key and the
letter B. There are other key combinations that will stop a process, list all processes,
resume a process, report current user statistics, and edit the current command line.</P>
<P>There are still many VAX servers on the Internet, and VMS is still very much alive.
The newest version is called OpenVMS. OpenVMS is available for both VAX and Alpha
machines. Alphas are extremely fast workstations (now at speeds exceeding 400Mhz)
that can run Windows NT, OpenVMS, or Digital UNIX.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>TIP:</B></FONT><B> </B>There is a complete online manual
	on OpenVMS. It is almost 1MB, but offers comprehensive coverage of OpenVMS and its
	capabilities. That document is available at <A 
HREF="javascript:if(confirm('http://www.ethz.ch/ETH/ID/KS.html.docs/SW_Distr/OpenVMS_AXP_Distr/9506-OpenVMS_AXP_new_features.html  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.ethz.ch/ETH/ID/KS.html.docs/SW_Distr/OpenVMS_AXP_Distr/9506-OpenVMS_AXP_new_features.html'" tppabs="http://www.ethz.ch/ETH/ID/KS.html.docs/SW_Distr/OpenVMS_AXP_Distr/9506-OpenVMS_AXP_new_features.html"><TT>http://www.ethz.ch/ETH/ID/KS.html.docs/SW_Distr/OpenVMS_AXP_Distr/9506-OpenVMS_AXP_new_features.html</TT></A>.
	
<HR>


</BLOCKQUOTE>

<P>The majority of VAX servers on the Net are older. Many are machines located at
university libraries. These provide users with facilities for searching electronic
card catalogs. In all likelihood, most older VAX machines are at least as secure
as their UNIX workstation counterparts. This is because much is known about the VAX/VMS
system and its security. If there is a hole, it is because the system administrator
missed it.
<H2><FONT COLOR="#000077"><B>Security in VMS</B></FONT></H2>
<P>Security in VMS is well supported. For example, there is a strong model for access
control. (Whether that access control is properly implemented by the system administrator
is another matter.) Access control on VMS is at least as comprehensive as that on
the Novell NetWare platform. Here are some of the values that can be controlled:

<UL>
	<LI><I>Time.</I> You can control both the days of the week and the hours of the day
	at which a user can access a given area of the system. (The default setting allows
	the user access at any time, 24 hours a day, 7 days a week.) The time access feature
	works similarly to a firewall: &quot;That which is not expressly permitted is denied.&quot;<BR>
	<BR>
	
	<LI><I>Mode.</I> This is an interesting feature. You can specify the mode in which
	a user can connect and interact with the system. Therefore, you can restrict remote
	network logins to certain times or eliminate them completely. Because this can be
	done incisively by user, this feature makes remote security much stronger than on
	many other platforms. You can hardly begin to crack if you are restricted from even
	logging in. (Next, we'll discuss some utilities that also force callback verification
	on remote dial-up users.)<BR>
	<BR>
	
	<LI><I>Resources.</I> You can control the resources available to the user at login.
	This is useful for setting directories beyond which the user may not be able to travel.
</UL>

<P>This is really just scratching the surface of the access control available in
VMS. In fact, there are multiple levels of privileges, and these can be applied to
groups. Groups can be restricted to certain resources, and so on. In other words,
access control is a complex issue with VMS. There are many, many options. It is for
this reason that crackers have a halfway decent chance of finding a hole. Sometimes,
complexity can be a security risk in itself. Crackers are well aware of this:

<DL>
	<DD>The greatest advantage of VMS is its flexibility. The system manager can choose
	to implement or ignore a wide range of security features, fortunately for the [cracker],
	they all seem to ignore the important ones. It is possible to protect all, any or
	none of the files created. It is also possible to provide general or restricted passwords,
	or no passwords at all. Access codes can be global or limited. The use log can be
	ignored, used only for record keeping, or be employed as a security control tool.
</DL>



<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>The previous paragraph
	is excerpted from Lex Luthor's &quot;Advanced Hacking VAX's VMS&quot; (<I>Legion
	of Doom</I>, June 1, 1985). It can be found online at <A HREF="javascript:if(confirm('http://www.mdc.net/~trent/hackvax.txt  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.mdc.net/%7Etrent/hackvax.txt'" tppabs="http://www.mdc.net/%7Etrent/hackvax.txt"><TT>http://www.mdc.net/~trent/hackvax.txt</TT></A>.
	
<HR>


</BLOCKQUOTE>

<P>This document is one of the definitive texts on cracking the VMS system. It was
authored by Lex Luthor (an alias, of course), who in 1984 established a bulletin
board called the Legion of Doom. From this (and through other means) Luthor gathered
together a loosely knit cracker group that went by the same name. Legion of Doom
(or LoD, as they are more commonly referred to) pulled off some of the most extraordinary
cracks ever done. LoD published many electronic journals on the Internet that simplified
the art of cracking, including the LoD Technical Journal. The federal government
waged a fleetingly successful war against members of the group. Today, former LoD
members are a little piece of Internet folklore.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>Perhaps one of the best
	documents available on the Internet for information on how to secure a VMS box was
	written by neither a cracker nor a hacker: Rob McMillan, &quot;A Practical Exercise
	in Securing an OpenVMS System,&quot; Prentice Centre, The University Of Queensland,
	<A HREF="javascript:if(confirm('http://nsi.org/Library/Compsec/openvms.txt  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://nsi.org/Library/Compsec/openvms.txt'" tppabs="http://nsi.org/Library/Compsec/openvms.txt"><TT>http://nsi.org/Library/Compsec/openvms.txt</TT></A>.
	
<HR>


</BLOCKQUOTE>

<P>Attacking a VAX (or any VMS-based system) is quite different from attacking a
UNIX system. First, the concept of the password file is different and so is its structure.
UNIX systems maintain <TT>/etc/passwd</TT>, which defines the username, password,
login shell, and group. In contrast, the VMS system uses a file that defines many
other variables, not simply these values:

<DL>
	<DD>Every DEC running VMS holds the user profiles in a file called SYSUAF (System
	User Authorization File). For every user on the system, including the System Manager,
	there is a record which tells the computer when and how a user can log onto the system.
	It also gives details of password aging, password lengths and all the facilities
	that a user has when they are logged on.
</DL>



<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>The previous paragraph
	is excerpted from &quot;The Five Minute Guide to VMS Security: Product Review PC-DEC-AUDIT&quot;
	(<I>AudIT Magazine</I>, 1994). It can be found online at <A HREF="javascript:if(confirm('http://www.trillion.demon.co.uk/magrev.htm  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.trillion.demon.co.uk/magrev.htm'" tppabs="http://www.trillion.demon.co.uk/magrev.htm"><TT>http://www.trillion.demon.co.uk/magrev.htm</TT></A>.
	
<HR>


</BLOCKQUOTE>

<P>Note that this &quot;comprehensive&quot; approach to the password file has its
pitfalls. One is this: If a cracker gains access to the file and cracks it (using
the utilities described later in this chapter), the whole system is subject to breach,
then and there. However, the likelihood of that happening is poor.</P>
<P>The user, by the way, is identified through the use of a user identification code
(UIC). This is very similar in ways to the GID in UNIX. It identifies the user and
what groups that user may belong to. As you might have guessed, the UIC comes from
the centralized database:

<DL>
	<DD>When you log in to a system, the operating system copies your UIC from your user
	authorization (UAF) record in the system user authorization file (SYSUAF.DAT) and
	assigns it to your process. It serves as an identification for the life of the process.
</DL>



<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>The previous paragraph
	is excerpted from &quot;OpenVMS Guide to System Security: Contents of a User's Security
	Profile. 4.1.1.3 How Your Process Acquires a UIC,&quot; which can be found online
	at <A HREF="javascript:if(confirm('http://wawona.ethz.ch/OpenVMS_docu/ssb71/6346/6346p004.htm  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://wawona.ethz.ch/OpenVMS_docu/ssb71/6346/6346p004.htm#heading_4.1.1'" tppabs="http://wawona.ethz.ch/OpenVMS_docu/ssb71/6346/6346p004.htm#heading_4.1.1"><TT>http://wawona.ethz.ch/OpenVMS_docu/ssb71/6346/6346p004.htm#heading_4.1.1</TT></A>.
	
<HR>


</BLOCKQUOTE>

<H2><FONT COLOR="#000077"><B>Some Old Holes</B></FONT></H2>
<P>Following is a discussion of some common holes.
<H3><FONT COLOR="#000077"><B>The Mountd Hole</B></FONT></H3>
<P>If two successive <TT>mount -d -s</TT> commands are sent within seconds of one
another (and before another host has issued such a request), the request will be
honored. This was originally reported by CERT in March 1994 and applies to VAX machines
running any variant of Digital UNIX.
<H3><FONT COLOR="#000077"><B>The Monitor Utility Hole</B></FONT></H3>
<P>In VMS there is a utility called Monitor. The purpose of the program is to monitor
classes of systemwide performance data (either from a process already running or
from a previously compiled monitor file). The hole was not a critical one, but did
bear some concern:

<DL>
	<DD>Unauthorized privileges may be expanded to authorized users of a system under
	certain conditions, via the Monitor utility. Should a system be compromised through
	unauthorized access, there is a risk of potential damage to a system environment.
	This problem will not permit unauthorized access entry, as individuals attempting
	to gain unauthorized access will continue to be denied through the standard VMS security
	mechanisms.
</DL>



<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>The previous paragraph
	is excerpted from a CERT advisory titled &quot;VMS Monitor Vulnerability.&quot; It
	can be found online at <A HREF="javascript:if(confirm('http://www.arc.com/database/Security_Bulletins/CERT/CA-92:16.VMS.Monitor.vulnerability  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.arc.com/database/Security_Bulletins/CERT/CA-92:16.VMS.Monitor.vulnerability'" tppabs="http://www.arc.com/database/Security_Bulletins/CERT/CA-92:16.VMS.Monitor.vulnerability"><TT>http://www.arc.com/database/Security_Bulletins/CERT/CA-92:16.VMS.Monitor.vulnerability</TT></A>.
	
<HR>


</BLOCKQUOTE>

<P>This was a local problem and not a particularly critical one. For specific information
on that hole (and the fix), obtain the Defense Data Network Advisory concerning it.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>The Defense Data Network
	Advisory concerning this hole is located at DDN Security Bulletin 9223, <A HREF="javascript:if(confirm('ftp://nic.mil/scc/sec-9223.txt  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='ftp://nic.mil/scc/sec-9223.txt'" tppabs="ftp://nic.mil/scc/sec-9223.txt"><TT>ftp://nic.mil/scc/sec-9223.txt</TT></A>.
	
<HR>


</BLOCKQUOTE>

<H3><FONT COLOR="#000077"><B>Historical Problems: The Wank Worm Incident</B></FONT></H3>
<P>Sometime in September or October 1989, a worm was released that compromised machines
on DecNet. On infected machines, the program would print to the terminal a message
relating that the machine had been &quot;Wanked.&quot; The message purported to come
from Worms Against Nuclear Killers, or WANK. It was reported in the CERT advisory
about the Wank Worm:

<DL>
	<DD>This worm affects only DEC VMS systems and is propagated via DecNet protocols,
	not TCP/IP protocols. If a VMS system had other network connections, the worm was
	not programmed to take advantage of those connections. The worm is very similar to
	last year's HI.COM (or Father Christmas) worm.
</DL>



<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>The previous paragraph
	is excerpted from a CERT advisory titled &quot;`WANK' Worm On SPAN Network.&quot;
	It can be found online at <A HREF="javascript:if(confirm('http://www.arc.com/database/Security_Bulletins/CERT/CA-89:04.decnet.wank.worm  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.arc.com/database/Security_Bulletins/CERT/CA-89:04.decnet.wank.worm'" tppabs="http://www.arc.com/database/Security_Bulletins/CERT/CA-89:04.decnet.wank.worm"><TT>http://www.arc.com/database/Security_Bulletins/CERT/CA-89:04.decnet.wank.worm</TT></A>.
	
<HR>


</BLOCKQUOTE>

<P>In that advisory, an analysis of the worm was provided by R. Kevin Oberman of
the Engineering Department of Lawrence Livermore National Laboratory. Oberman's report
was apparently generated on-the-fly and in haste, but it was quite complete notwithstanding.
He reported that the worm was not incredibly complex but could be dangerous if it
compromised a privileged account. The worm would enter a system, check to see if
it was already infected, and if not, perform some or all of these procedures:

<UL>
	<LI>Disable mail to certain accounts<BR>
	<BR>
	
	<LI>Change system passwords, using a random-number generator, and in doing so, lock
	out the system operator<BR>
	<BR>
	
	<LI>Use the instant system as a launching pad to attack new ones
</UL>

<P>Oberman included within his analysis a quickly hacked program that would halt
the march of the Wank Worm. The source of that program can still be examined online
in the original advisories.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>The main advisory, issued
	by CERT is located at <A HREF="javascript:if(confirm('http://www.arc.com/database/Security_Bulletins/CERT/CA-89:04.decnet.wank.worm  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.arc.com/database/Security_Bulletins/CERT/CA-89:04.decnet.wank.worm'" tppabs="http://www.arc.com/database/Security_Bulletins/CERT/CA-89:04.decnet.wank.worm"><TT>http://www.arc.com/database/Security_Bulletins/CERT/CA-89:04.decnet.wank.worm</TT></A>.
	
<HR>


</BLOCKQUOTE>

<P>What's really interesting is the degree of seriousness in the tone of the advisory.
Think about it for a moment. It was just less than one year before that the Morris
Worm incident sent a ripple through the Net. The mere mention of a worm during those
months could cause a panic. Oddly, though, because of the curious name of this particular
worm, some administrators initially took the warnings for a joke.</P>
<P>Also, the Wank Worm was irrelevant to a large portion of the Internet. Since the
worm only affected those running DEC protocols (and not TCP/IP), only a limited number
of potential victims existed. However, while that number was relatively small in
proportion to the entire Internet, there were a great many sites using DecNet.</P>
<P>An interesting treatment of the event can be found in &quot;Approaching Zero:
The Extraordinary Underworld of Hackers, Phreakers, Virus Writers, and Keyboard Criminals&quot;:

<DL>
	<DD>The arrival of the worm coincided with reports of protesters in Florida attempting
	to disrupt the launch of a nuclear-powered shuttle payload. It is assumed that the
	worm was also a protest against the launch. The WANK Worm spread itself at a more
	leisurely rate than the Internet Worm, sending out fewer alarms and creating less
	hysteria....A method for combating the worm was developed by Bernard Perrot of the
	Institut de Physique Nucleaire at Orsay, France. Perrot's scheme was to create a
	booby-trapped file of the type that the worm could be expected to attack. If the
	worm tried to use information from the file, it would itself come under attack and
	be blown up and killed.
</DL>



<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>The previous excerpt
	is from an article by Paul Mungo and Bryan Glough titled &quot;Approaching Zero:
	The Extraordinary Underworld of Hackers, Phreakers, Virus Writers, and Keyboard Criminals.&quot;
	It can be found online at <A HREF="javascript:if(confirm('http://www.feist.com/~tqdb/h/aprozero.txt  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.feist.com/%7Etqdb/h/aprozero.txt'" tppabs="http://www.feist.com/%7Etqdb/h/aprozero.txt"><TT>http://www.feist.com/~tqdb/h/aprozero.txt</TT></A>.
	
<HR>


</BLOCKQUOTE>

<H2><FONT COLOR="#000077"><B>Audits and Monitoring</B></FONT></H2>
<P>Auditing capabilities in the VMS environment are advanced. There are different
ways to implement auditing and this is basically a matter of the system operator's
taste. However, by default, VMS will log all logins, failures to log in, changes
in system privileges, and so forth. The default configuration provides a minimum
of logging.</P>
<P>That minimum, however, can be quickly surpassed if need be. The system operator
can apply special access controls on individual files and directories, a user account,
or processes. When undesirable or suspicious activity occurs in relation to these
access control policies, an alarm is generated. The system operator defines what
form the alarm will take. (For example, it is common for system operators to redirect
alarm information to a specific console so that such messages visibly appear and
can be quickly perused at any time.) Of course, severe paranoia in this type of environment
can add up to sacrificing a fair amount of disk space. For example, a system operator
can even have the system generate alarms on a mere attempt to access a file for which
the user has no privileges.</P>
<P>An example would be where a user attempted to view (or list) a file for which
he had no privileges. It would be the equivalent of issuing an alarm for each time
a shell user on a UNIX system tried accessing a root-owned file or directory. One
interesting thing about this is that the alarm can be generated in response to a
violation of policies set against the user, as opposed to global restrictions placed
on the file. I am not sure which model is actually more secure, but I would guess
it would be the VMS model.</P>
<P>The logging capabilities of VMS are quite granular. You can monitor almost anything
from users accessing a file to them starting a protocol-based process. (You can even
log users attempting to change the time.) In addition to this native monitoring,
there are several utilities (some of which I mention later in the chapter) that can
trap terminal sessions and monitor them for inactivity and perhaps other undesirable
behavior.</P>
<P>Various utilities make it easier to crack the VMS platform or, having cracked
it, to avoid detection. As with any other system, these utilities are sometimes of
significant advantage to both the root operator and the cracker.
<H3><FONT COLOR="#000077"><B>watchdog.com</B></FONT></H3>
<P>watchdog.com was written by a hacker with the handle Bagpuss. The purpose of watchdog.com
is simple: It keeps tabs on users logging in and out of the machine. It is an early
warning system that can alert you to when the system operator (or other similarly
privileged user) logs on.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>The source code and full
	explanation of watchdog.com are located at <A HREF="javascript:if(confirm('http://www.wordserf.co.uk/mh/vaxhackpro.html  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.wordserf.co.uk/mh/vaxhackpro.html'" tppabs="http://www.wordserf.co.uk/mh/vaxhackpro.html"><TT>http://www.wordserf.co.uk/mh/vaxhackpro.html</TT></A>.
	
<HR>


</BLOCKQUOTE>

<H3><FONT COLOR="#000077"><B>Stealth</B></FONT></H3>
<P>Stealth was also written by Bagpuss. The purpose of this utility is to evade detection
in the event that someone (the system operator, perhaps) issues the <TT>SHOW USER</TT>
command. This command is much like combining the <TT>W</TT>, <TT>WHO</TT>, and <TT>PS</TT>
commands in UNIX. It identifies the users currently logged to the machine and their
status. Stealth prevents the user from being visible on such a query.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>The source code for Stealth
	is at <A HREF="javascript:if(confirm('http://www.wordserf.co.uk/mh/vaxhackpro.html  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.wordserf.co.uk/mh/vaxhackpro.html'" tppabs="http://www.wordserf.co.uk/mh/vaxhackpro.html"><TT>http://www.wordserf.co.uk/mh/vaxhackpro.html</TT></A>.
	
<HR>


</BLOCKQUOTE>

<H3><FONT COLOR="#000077"><B>GUESS_PASSWORD</B></FONT></H3>
<P>GUESS_PASSWORD is designed to crack the password file of the VMS system. The program
works quite well, but you have to wonder about its actual value. These days, it is
unlikely that a system administrator would unprotect the <TT>SYSUAF.DAT</TT> file
(where the passwords are actually located). However, if a cracker could find such
an unprotected password file, this utility would assist in cracking it.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>GUESS_PASSWORD (with
	source) is available at <A HREF="javascript:if(confirm('http://www.uniud.it/ftp/vms/uaf.zip  \n\nThis file was not retrieved by Teleport Pro, because it did not meet the project\'s file type specifications.  \n\nDo you want to open it from the server?'))window.location='http://www.uniud.it/ftp/vms/uaf.zip'" tppabs="http://www.uniud.it/ftp/vms/uaf.zip"><TT>http://www.uniud.it/ftp/vms/uaf.zip</TT></A>.
	
<HR>


</BLOCKQUOTE>

<H3><FONT COLOR="#000077"><B>WATCHER</B></FONT></H3>
<P>WATCHER is a snooping utility, most commonly used by system administrators. Its
purpose is to watch terminal sessions. From a security point of view, WATCHER is
a good resource. It will monitor how long a terminal has been idle. The system administrator
(or the user) can set the time period after which idle sessions can be automatically
killed. (Idle terminal sessions are in themselves a security risk. Crackers watch
accounts that remain idle for long periods of time. These accounts are deemed good
targets.)


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>WATCHER is available
	at <A HREF="javascript:if(confirm('ftp://ftp.wku.edu/madgoat/WATCHER.zip  \n\nThis file was not retrieved by Teleport Pro, because it did not meet the project\'s file type specifications.  \n\nDo you want to open it from the server?'))window.location='ftp://ftp.wku.edu/madgoat/WATCHER.zip'" tppabs="ftp://ftp.wku.edu/madgoat/WATCHER.zip"><TT>ftp://ftp.wku.edu/madgoat/WATCHER.zip</TT></A>.
	
<HR>


</BLOCKQUOTE>

<H3><FONT COLOR="#000077"><B>Checkpass</B></FONT></H3>
<P>Checkpass is a tool that examines the relative strength or weakness of a given
password in the <TT>SYSUAF.DAT</TT> file. It's good for versions 5.4 and onward.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>Checkpass is available
	at <A HREF="javascript:if(confirm('ftp://www.decus.org/pub/lib/vs0127/checkpass/check.zip  \n\nThis file was not retrieved by Teleport Pro, because it did not meet the project\'s file type specifications.  \n\nDo you want to open it from the server?'))window.location='ftp://www.decus.org/pub/lib/vs0127/checkpass/check.zip'" tppabs="ftp://www.decus.org/pub/lib/vs0127/checkpass/check.zip"><TT>ftp://www.decus.org/pub/lib/vs0127/checkpass/check.zip</TT></A>.
	
<HR>


</BLOCKQUOTE>

<H3><FONT COLOR="#000077"><B>Crypt</B></FONT></H3>
<P>As you might guess, Crypt is a DES encryption module for the VMS operating system.
Interestingly, it also provides support for UNIX and DOS. It was developed (along
with the previous utility) by M. Edward Nieland, who wrote these tools primarily
in C and FORTRAN.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>The CRYPT utility is
	located at <A HREF="javascript:if(confirm('ftp://www.decus.org/pub/lib/vs0127/crypt/crypt.zip  \n\nThis file was not retrieved by Teleport Pro, because it did not meet the project\'s file type specifications.  \n\nDo you want to open it from the server?'))window.location='ftp://www.decus.org/pub/lib/vs0127/crypt/crypt.zip'" tppabs="ftp://www.decus.org/pub/lib/vs0127/crypt/crypt.zip"><TT>ftp://www.decus.org/pub/lib/vs0127/crypt/crypt.zip</TT></A>.
	
<HR>


</BLOCKQUOTE>

<H3><FONT COLOR="#000077"><B>DIAL</B></FONT></H3>
<P>A secure dialback module, DIAL is designed to prevent unauthorized remote users
from gaining access to your system. As explained in the DIAL user's guide:

<DL>
	<DD>Only pre-authorized users and their work location telephone numbers can gain
	access to the system through DIAL. Once access is granted the user is disconnected
	from the incoming call and dialed back at the authorized telephone number. This provides
	the user with free access to his accounts over public telephone lines.
</DL>

<P>The system works through the maintenance of a file that lists all valid users
and their telephone numbers. (Read: This could be one method of circumventing this
security. Reach that file and you reach DIAL.) It was written in C by Roger Talkov
at Emulex.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>DIAL is available at
	<A HREF="javascript:if(confirm('ftp://www.decus.org/pub/lib/v00149/dial.zip  \n\nThis file was not retrieved by Teleport Pro, because it did not meet the project\'s file type specifications.  \n\nDo you want to open it from the server?'))window.location='ftp://www.decus.org/pub/lib/v00149/dial.zip'" tppabs="ftp://www.decus.org/pub/lib/v00149/dial.zip"><TT>ftp://www.decus.org/pub/lib/v00149/dial.zip</TT></A>.
	
<HR>


</BLOCKQUOTE>

<H3><FONT COLOR="#000077"><B>CALLBACK.EXE</B></FONT></H3>
<P>Written by Robert Eden of Texas Utilities, CALLBACK.EXE performs essentially the
same functions as DIAL. It was written in FORTRAN.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>CALLBACK.EXE is available
	at <A HREF="javascript:if(confirm('http://www.openvms.digital.com/cd/CALLBACK/CALLBACK.EXE  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.openvms.digital.com/cd/CALLBACK/CALLBACK.EXE'" tppabs="http://www.openvms.digital.com/cd/CALLBACK/CALLBACK.EXE"><TT>http://www.openvms.digital.com/cd/CALLBACK/CALLBACK.EXE</TT></A>.
	
<HR>


</BLOCKQUOTE>

<H3><FONT COLOR="#000077"><B>TCPFILTER (G. Gerard)</B></FONT></H3>
<P>TCPFILTER is a utility that restricts outgoing connects. As described in the documentation,
the utility does the following:

<DL>
	<DD>...allows the filtering of outgoing UCX TCP/IP calls. Each attempt to open an
	outgoing call is verified with a table of addresses, and is allowed or forbidden.
	The validation of the call can be done with two different mechanisms: with ACL, or
	with image names. The use of ACL allows controlling each user by the means of an
	identifier.
</DL>



<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>The previous paragraph
	is excerpted from a file titled TCPFILTER.DOC ENGLISH by G. Gerard. It can be found
	online at <A HREF="javascript:if(confirm('http://www.openvms.digital.com/cd/TCPFILTER/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.openvms.digital.com/cd/TCPFILTER/'" tppabs="http://www.openvms.digital.com/cd/TCPFILTER/"><TT>http://www.openvms.digital.com/cd/TCPFILTER/</TT></A>.
	
<HR>


</BLOCKQUOTE>

<P>I should point out that the term <I>calls</I> means outgoing TCP/IP connect requests.
That is, you can restrict connect requests to specific IP addresses, based on user
information in the Access Control List. A pretty nifty utility. For example, you
could restrict any access to outside hacker or cracker boards. Hmm.


<BLOCKQUOTE>
	<P>
<HR>
<FONT COLOR="#000077"><B>Cross Reference:</B></FONT><B> </B>TCPFILTER is located
	at <A HREF="javascript:if(confirm('http://www.openvms.digital.com/cd/TCPFILTER/TCP.COM  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.openvms.digital.com/cd/TCPFILTER/TCP.COM'" tppabs="http://www.openvms.digital.com/cd/TCPFILTER/TCP.COM"><TT>http://www.openvms.digital.com/cd/TCPFILTER/TCP.COM</TT></A>.
	
<HR>


</BLOCKQUOTE>

<H2><FONT COLOR="#000077"><B>Changing Times</B></FONT></H2>
<P>The VAX/VMS combination was once a very popular one. And, as I have already related,
OpenVMS is alive and well. However, changes in the computer industry and in public
demand have altered the Internet's climate with regard to VMS. When coupled with
Digital's commitment to Microsoft to provide a suitable architecture on which to
run Windows NT, these changes contributed to a decrease in the use of VMS. This is
curious because today the source code is available. As I have explained elsewhere
in this book, whenever the source of an operating system is available, the security
community has an opportunity to fine-tune it.</P>
<P>Because Digital Alpha stations now run both Microsoft Windows NT and Digital UNIX,
VMS is likely to take a backseat. This is especially so with regard to Digital UNIX
because it is a 64-bit system. Imagine for a moment a 64-bit system running at 400MHz.
In my opinion, this configuration is the most powerful currently available to the
average user. Such a machine (loaded with at least 64MB of RAM) is vastly superior
in my opinion to either the Pentium or the MMX. So the days of the old VAX/VMS are
probably over.</P>
<P>Today's cracker probably knows little about these systems. More concentration
has been allotted to UNIX and as of late, Windows NT. If I were going to contract
someone to crack a VAX, I would look for someone in his mid-30s or older. Certainly,
the advent of the PC has contributed to the lack of VMS security knowledge. Young
people today work mostly with PC- or Mac-based machines. It is therefore rare to
come in contact with a VAX anymore, except as library servers or other database machines.</P>
<P>A close friend of mine has a MicroVAX II in his garage. Each time I visit his
home, we talk about the prospect of cranking up that old machine. One day soon, we'll
probably do just that.</P>
<P>At day's end, VMS is an interesting, durable, and relatively secure platform.
Moreover, DEC was always exceptionally close-mouthed about the security weaknesses
of VAX/VMS. If you retrieve all the known advisories on VAX/VMS, you will see that
DEC routinely declined to include information that could potentially be used by crackers.
(Most often, DEC would advise that VAX users contact their local DEC representative.)
This was a smart move and one that has made it traditionally difficult to crack VAX
servers. If the system administrator of a VAX has been on his toes, after a cracker
has tried all the default passwords, there is nothing left to do but turn to social
engineering.
<H2><FONT COLOR="#000077"><B>Summary</B></FONT></H2>
<P>The VAX/VMS system is an antiquated one at this stage of the game. However, it
is not out of the race yet. OpenVMS has much to offer. If you are considering a career
in Internet security, you should at least take some brief courses in VMS. Or, if
you are like me and prefer the more direct approach, buy a used VAX and set yourself
to the task of cracking it. These can be acquired for practically nothing today in
<TT>misc.forsale.computers.workstation</TT>. Many sellers even have the original
installation media.</P>
<P>In closing, it is my opinion that the security of the VAX is advanced and even
somewhat elegant. Moreover, in many parts of the world, the VAX is still popular.
Time studying VAX security is probably time well spent.
<H3><FONT COLOR="#000077"><B>Resources</B></FONT></H3>
<P><B>VAX Security: Protecting the System and the Data.</B> Sandler and Badgett.
John Wiley &amp; Sons. ISBN 0-471-51507-8.</P>
<P><B>A Retrospective on the VAX VMM Security Kernel.</B> Paul A. Karger, Mary E.
Zurko, Douglas W. Bonin, Andrew H. Mason, and Clifford E. Kahn. <I>IEEE Transactions
on Software Engineering</I>, 17(11):1147-1163, November 1991.</P>
<P><B>Database Security.</B> S. Castano, M. G. Fugini, G. Martella, and P. Samarati.
Addison-Wesley Publishing Company. 1995. (Good chapter on VAX/VMS.)</P>
<P><B>Security Guidance for VAX/VMS Systems.</B> Debra L. Banning. Sparta, Inc. 14th
National Computer Security Conference, Washington, DC, October, 1991.</P>
<P><B>A Practical Exercise in Securing an OpenVMS System.</B> Rob McMillan, Prentice
Centre, The University Of Queensland.

<UL>
	<LI><A HREF="javascript:if(confirm('http://nsi.org/Library/Compsec/openvms.txt  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://nsi.org/Library/Compsec/openvms.txt'" tppabs="http://nsi.org/Library/Compsec/openvms.txt"><TT>http://nsi.org/Library/Compsec/openvms.txt</TT></A>
</UL>

<P><B>How VMS Keeps Out Intruders.</B> Tanya Candia. <I>Computers &amp; Security</I>,
9(6):499-502, October 1990.</P>
<P><B>ESNET/DECNET Security Policy Procedures and Guidelines.</B> D. T. Caruso and
C. E. Bemis, Jr., <I>ESnet/DecNet Security Revised Draft</I>, December 1989.

<UL>
	<LI><A HREF="javascript:if(confirm('http://www.es.net/pub/esnet-doc/esnet-decnet-security.txt  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.es.net/pub/esnet-doc/esnet-decnet-security.txt'" tppabs="http://www.es.net/pub/esnet-doc/esnet-decnet-security.txt"><TT>http://www.es.net/pub/esnet-doc/esnet-decnet-security.txt</TT></A>
</UL>

<P><B>C.O.T.S. (Certified OpenVMS Technical Specialist) Examination.</B>

<UL>
	<LI><A HREF="javascript:if(confirm('http://www.repton.co.uk/cots.htm  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.repton.co.uk/cots.htm'" tppabs="http://www.repton.co.uk/cots.htm"><TT>http://www.repton.co.uk/cots.htm</TT></A>
</UL>

<P><B>Approaching Zero: The Extraordinary Underworld of Hackers, Phreakers, Virus
Writers, and Keyboard Criminals.</B> Paul Mungo and Bryan Glough.

<UL>
	<LI><A HREF="javascript:if(confirm('http://www.feist.com/~tqdb/h/aprozero.txt  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.feist.com/%7Etqdb/h/aprozero.txt'" tppabs="http://www.feist.com/%7Etqdb/h/aprozero.txt"><TT>http://www.feist.com/~tqdb/h/aprozero.txt</TT></A>
</UL>

<P><B>VMS Monitor Vulnerability.</B> CERT advisory. CA-92:16. September 22, 1992.

<UL>
	<LI><A HREF="javascript:if(confirm('http://www.arc.com/database/Security_Bulletins/CERT/CA-92:16.VMS.Monitor.vulnerability  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.arc.com/database/Security_Bulletins/CERT/CA-92:16.VMS.Monitor.vulnerability'" tppabs="http://www.arc.com/database/Security_Bulletins/CERT/CA-92:16.VMS.Monitor.vulnerability"><TT>http://www.arc.com/database/Security_Bulletins/CERT/CA-92:16.VMS.Monitor.vulnerability</TT></A>
</UL>

<CENTER>
<P>
<HR>
<A HREF="ch18.htm" tppabs="http://pbs.mcp.com/ebooks/1575212684/ch18/ch18.htm"><IMG SRC="previous.gif" tppabs="http://pbs.mcp.com/ebooks/1575212684/button/previous.gif" WIDTH="128" HEIGHT="28"
ALIGN="BOTTOM" ALT="Previous chapter" BORDER="0"></A><A HREF="ch20.htm" tppabs="http://pbs.mcp.com/ebooks/1575212684/ch20/ch20.htm"><IMG
SRC="next.gif" tppabs="http://pbs.mcp.com/ebooks/1575212684/button/next.gif" WIDTH="128" HEIGHT="28" ALIGN="BOTTOM" ALT="Next chapter"
BORDER="0"></A><A HREF="index-38.htm" tppabs="http://pbs.mcp.com/ebooks/1575212684/index.htm"><IMG SRC="contents.gif" tppabs="http://pbs.mcp.com/ebooks/1575212684/button/contents.gif" WIDTH="128"
HEIGHT="28" ALIGN="BOTTOM" ALT="Contents" BORDER="0"></A> <BR>
<BR>
<BR>


<P>&#169; <A HREF="copy.htm" tppabs="http://pbs.mcp.com/ebooks/1575212684/copy.htm">Copyright</A>, Macmillan Computer Publishing. All
rights reserved.
</CENTER>


</BODY>

</HTML>
