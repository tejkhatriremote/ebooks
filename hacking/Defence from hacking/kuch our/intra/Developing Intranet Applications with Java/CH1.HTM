<HTML>

<HEAD>
   <TITLE>Chapter 1 -- Intranets and Java</TITLE>
   <META NAME="GENERATOR" CONTENT="Mozilla/3.0b5aGold (WinNT; I) [Netscape]">
</HEAD>
<BODY TEXT="#000000" BGCOLOR="#FFFFFF" LINK="#0000EE" VLINK="#551A8B" ALINK="#CE2910">
<H1><FONT COLOR=#FF0000>Chapter 1</FONT></H1>
<H1><B><FONT SIZE=5 COLOR=#FF0000>Intranets and Java</FONT></B>
</H1>
<P>
<HR WIDTH="100%"></P>
<P>
<H3 ALIGN=CENTER><FONT COLOR="#000000"><FONT SIZE=+2>CONTENTS<A NAME="CONTENTS"></A>
</FONT></FONT></H3>

<UL>
<LI><A HREF="#WhatIsanIntranet" >What Is an Intranet?</A>
<LI><A HREF="#UsingWebServicesonYourIntranet" >Using Web Services on Your Intranet</A>
<LI><A HREF="#WhyBuildanIntranet" >Why Build an Intranet?</A>
<UL>
<LI><A HREF="#IntranetsAreAffordable" >Intranets Are Affordable</A>
<LI><A HREF="#IntranetsSaveMoney" >Intranets Save Money</A>
<LI><A HREF="#IntranetsAreHighlyEfficient" >Intranets Are Highly Efficient</A>
</UL>
<LI><A HREF="#JavainBrief" >Java in Brief</A>
<UL>
<LI><A HREF="#JavaTheEarlyDays" >Java: The Early Days</A>
<LI><A HREF="#JavaGetstheOfficialStampofApproval" >Java Gets the Official Stamp of Approval</A>
<LI><A HREF="#JavainAction" >Java in Action</A>
<LI><A HREF="#RapidDevelopmentwithJava" >Rapid Development with Java</A>
</UL>
<LI><A HREF="#UsingJavaonanIntranet" >Using Java on an Intranet</A>
<UL>
<LI><A HREF="#UsingaJavaApplicationtoTrackEmploy" >Using a Java Application to Track Employee Files</A>
<LI><A HREF="#UsingaJavaApplicationtoScheduleApp" >Using a Java Application to Schedule Appointments, Meetings, and Conferences</A>
<LI><A HREF="#UsingaJavaApplicationtoTrackWhoIs" >Using a Java Application to Track Who Is in the Office</A>
</UL>
<LI><A HREF="#Summary" >Summary</A>
</UL>
<HR>
<P>
<I><B><FONT SIZE=5 COLOR=#000000>intra net \intra-net\ n</FONT></B><FONT SIZE=5 COLOR=#000000>:
an internal network that is sheltered from the outside world</FONT></I>
<P>
Networks aren't the same since the Java programming language and
intranets burst onto the scene. A few years ago, no one had heard
of the programming language named after the pervasive liquid that
energizes millions. Today, not only is the Java programming language
a buzzword in the computer industry, it is fueling a period of
tremendous growth and enthusiasm for networked platform-independent
applications.
<P>
Intranets, like Java, seemingly sprang to life overnight. The
key to intranets is that they apply the best Internet technologies
to the internal networks of organizations the world over. When
you combine the object-oriented programming language of the future
with a networked publishing solution you can only dream of until
recently, you have a powerful toolkit for boosting productivity,
enhancing information distribution, dramatically reducing costs,
increasing efficiency, and much more.
<P>
This chapter discusses the basics of intranets. You learn what
an intranet is, how intranets differ from Web sites, and why organizations
build intranets. You also learn something about the Java programming
language-like how Java can enhance an intranet.
<H2><A NAME="WhatIsanIntranet"><FONT SIZE=5 COLOR=#FF0000>What
Is an Intranet?</FONT></A></H2>
<P>
Millions of people browse the World Wide Web and if you are reading
this book, odds are you are one of them. The Web is a networked
information system based on hypertext. Hypertext allows you to
navigate through networked resources at the click of a button.
Using a client application called a browser, you can select highlighted
keywords or specified hot areas within a document to quickly and
automatically navigate to a new document. Browsers are in fact
your window to everything the World Wide Web has to offer. Using
Web technologies, you have instant access to anything your company
publishes and it is this information-on-demand feature that makes
the Web such a hot commodity.
<P>
Beneath the system of hypertext documents and the wonderful graphical
interface that makes it all work is a complex network-the Internet.
The Internet is a global network of millions of computers. Many
different technologies are used on the Internet to find, send,
and retrieve information:
<UL>
<LI><FONT COLOR=#000000>E-mail is </FONT>used to send electronic
mail.
<LI><FONT COLOR=#000000>Gopher, Archie, and </FONT>Veronica can
be used to find information.
<LI><FONT COLOR=#000000>FTP is used </FONT>to send and retrieve
files.
<LI><FONT COLOR=#000000>Telnet is used to log into </FONT>remote
hosts.
<LI><FONT COLOR=#000000>The Web is used </FONT>to browse hypertext
resources.
</UL>
<P>
Trillions of research dollars went into developing the Internet
and the tools that make it work. Since some of it was paid for
with your tax dollars, wouldn't it be nice to put this technology
to work for you and your company? This is where intranets come
in.
<P>
An intranet is a network within an organization-an internal network-that
adapts Internet technologies for use in its information infrastructure.
Worldwide, the most common Internet technology put to use within
organizations is the Web's hypertext system. For this reason,
many developers associate Web publishing on an internal network
with intranets.
<P>
Using your intranet as a publishing solution, employees throughout
your organization can quickly find answers to questions. They
don't have to search massive policy manuals or learn the commands
to interface with the company database. To find information, all
they have to do is click on a hypertext reference or enter a word
or two at a prompt.
<P>
Ideally, your intranet puts to use many different Internet technologies
including Internet <BR>
e-mail, FTP, Telnet, and Web services. You might be wondering
why you might want to use all these Internet services. After all,
most networks are set up for file transfer with FTP, remote host
logins, and e-mail. However, your internal network probably uses
commercial software designed for a specific operating system.
Further, this software is probably not entirely user and administrator
friendly.
<P>
Take e-mail for example. Most networks use an e-mail system. In
a large organization, mail gateways and servers are needed to
transfer e-mail from one area of the network to another. These
gateways and servers are responsible for translating or encapsulating
the protocol of the e-mail software so your messages are readable
on the receiving end.
<P>
Maintaining this maze of servers and gateways is the responsibility
of the network administrator. When the system fails, as it inevitably
does from time to time, users may lose mail and the administrator
may lose sleep. By using an e-mail system designed for the Internet,
you can end the nightmare. Users on any platform, be it UNIX,
Mac, or Windows 95, can use the same software to send and receive
messages. But best of all, you eliminate the necessity for e-mail
servers.
<H2><A NAME="UsingWebServicesonYourIntranet"><FONT SIZE=5 COLOR=#FF0000>Using
Web Services on Your Intranet</FONT></A></H2>
<P>
Setting up a Java-ready intranet with Web services is a key focus
in this book. To get started, you need three things:
<UL>
<LI><FONT COLOR=#000000>Server software</FONT>
<LI><FONT COLOR=#000000>Java-capable browser </FONT>software
<LI><FONT COLOR=#000000>A Java development </FONT>environment
</UL>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Note</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
Browsers that you can use with Java are discussed in <A HREF="ch2.htm" >Chapter 2</A>, &quot;Designing Intranet Applications with Java.&quot; 
</BLOCKQUOTE>
<BLOCKQUOTE>
Although the Java Development Kit includes a basic developer's environment, many developers prefer more advanced development tools. The best development tools currently available are discussed in <A HREF="ch4.htm" >Chapter 4</A>, &quot;Java Development 
Environments.&quot;
</BLOCKQUOTE>

</TD></TR>
</TABLE></CENTER>
<P>
<P>
Generally, all networks have computers designated as workstations
and servers. The workstations are the computers used by your end-users.
The servers are the computers that provide services to the workstations.
For your intranet, you need one or more servers to provide essential
services, which includes Web server software and applications.
<P>
The Web server software is used to display hypertext documents
that you publish on your intranet. Intranet publishing is very
different from Web publishing. When you publish on the Web, you
are making information and products available to the world community.
Yet when you publish on your intranet, the information and products
are only available to those with access to the internal network.
<P>
Using security mechanisms built in to most server software, you
can restrict access to information and products published on your
intranet, which allows you to selectively disseminate information
within the company. For example, your Java spreadsheet application
may only be accessible to personnel in the finance department.
You may further restrict access by adding login names and passwords.
In this way, corporate financial records are only accessible to
those who need to know.
<P>
Your intranet also needs applications and this is where Java comes
in. With Java you can create powerful applications that run on
virtually any operating system on your network. Unlike programs
coded in other programming languages, Java programs are not system
resource hogs. A typical advanced application for Windows 95 coded
in C++ requires 8-16MB of memory. If you follow sound object-oriented
design techniques, the same application coded in Java may require
only 2-4MB memory.
<H2><A NAME="WhyBuildanIntranet"><FONT SIZE=5 COLOR=#FF0000>Why
Build an Intranet?</FONT></A></H2>
<P>
If you are a software developer, programmer, or network administrator,
management has probably asked you a hundred different questions
about intranets. Sure, thousands of companies are racing to set
up intranets but does your organization need one? The answer is
a resounding yes, even for a small organization, and here are
the top three reasons why:
<UL>
<LI><FONT COLOR=#000000>Intranets are affordable.</FONT>
<LI><FONT COLOR=#000000>Intranets save money.</FONT>
<LI><FONT COLOR=#000000>Intranets are highly efficient.</FONT>
</UL>
<H3><A NAME="IntranetsAreAffordable">Intranets Are Affordable</A>
</H3>
<P>
Intranet services generally do not require a substantial amount
of system resources. You probably don't need to use a high-performance
computer to provide the services. In fact, on most networks, you
find that you can use an existing computer to provide the necessary
services. This computer may be a server with other roles within
your existing network or a workstation sitting on someone's desk.
Because you can use your existing network as the basis of your
intranet, the cost of setting up an intranet is negligible.
<P>
More good news is that you may not need full time developers or
administrators to maintain the intranet. Your current network
should have a system administrator capable of taking on the additional
role as the intranet administrator. Primarily this is because
intranet servers are easy to manage once they are up and running.
<P>
The company also needs someone to create the wonderful Java applications
for the intranet, which is probably where you fit into the picture.
This book is loaded with information on Java applications you
can develop for intranets.
<H3><A NAME="IntranetsSaveMoney">Intranets Save Money</A></H3>
<P>
You may be surprised to learn that creating an intranet can actually
save you and your company hundreds, thousands, and possibly millions
of dollars. If you don't think this is possible, find out how
much the company spent on software purchases in the last 2-3 years.
Wouldn't it be great to drastically reduce the need to purchase
commercial software? By developing your own applications for the
intranet, you can do just that.
<P>
An intranet can offer immediate savings in other areas as well.
The cost of a browser that includes an e-mail program is about
$25 to $40 per license. Typical Web server software costs between
$99 and $999. Using the Web server and browsers on your intranet,
you can publish documents and send e-mail.
<P>
Compare the price of the intranet solution to the hefty prices
of the software currently used on most internal networks to put
documents into electronic format and send e-mail. Generally, you
need to purchase the document creation tool and the e-mail tool
separately. A popular tool for creating documents on UNIX systems
costs more than $1000 for each license. Many commercial e-mail
packages require server software as well as client software. So,
you not only have to pay $60 to $100 per license for the e-mail
software, you also need to purchase e-mail server software at
a cost of hundreds of dollars.
<H3><A NAME="IntranetsAreHighlyEfficient">Intranets Are Highly
Efficient</A></H3>
<P>
Traditional ways to spread information throughout an organization
are through meetings, memos, newsletters, and the postal system.
In recent years, e-mail has played an increasing role in disseminating
information in the workplace. Your e-mail message can reach users
in milliseconds. Still, e-mail is not the most efficient way to
spread information. For example, you don't want to distribute
a 200-page policy document via e-mail. Generally, large or important
documents are distributed through the company's mail room or the
postal system.
<P>
You can take the same 200-page policy document and publish it
on your intranet, making the document instantly accessible to
anyone in the organization. Anything you publish on your intranet
is easily searched, indexed, and cross-referenced. Because the
document can be fully indexed and easily searched, employees are
able to quickly find the areas of the policy document they need
to read or are interested in.
<H2><A NAME="JavainBrief"><FONT SIZE=5 COLOR=#FF0000>Java in Brief</FONT></A>
</H2>
<P>
You have probably read all about Java in other books and after
reading the basic and intermediate topics those books cover, you
are ready to move on to more advanced topics. So instead of spending
a dozen pages to tell you about Java's features, I summarize Java's
features and history during a brief tour of the Web.
<H3><A NAME="JavaTheEarlyDays">Java: The Early Days</A></H3>
<P>
If you have browsed the World Wide Web, you have probably seen
Java in action. As unbelievable as it seems, Java was formally
introduced to the world in May 1995 and it has been the hottest
buzzword in the computer industry ever since. Java was born at
JavaSoft (<TT>www.javasoft.com</TT>)
and if you are a current Java programmer, you probably visit the
home site featured in Figure 1.1 regularly. Most programmers and
Java developers want to go straight to the Developer's Corner
section of the Web site, which is where you can download the latest
version of the Java Developer's Kit and extension Application
Programmer's Interfaces (APIs).
<P>
<A HREF="f1-1.gif" ><B>Figure 1.1 : </B><I>JavaSoft's site on the Web is a great place to visit frequently.</I></A>
<BR>
<P><CENTER><TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Note</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
JavaSoft is an operating company of Sun Microsystems. Like many Internet technology companies, JavaSoft has played the Internet name game. Back in 1991, JavaSoft was a special technologies group within Sun called Green. The Green group would later become 
FirstPerson, Inc. and finally, they would become JavaSoft. The name changes go along with the changing role of Java. The initial goal of the Green group was to establish Sun Microsystems in the commercial electronics market. Fortunately, things didn't turn 
out quite as Sun Microsystems planned and the project the Green group started became the platform-independent programming solution for networks.</BLOCKQUOTE>

</TD></TR>
</TABLE></CENTER>
<P>
<P>
Intranet developers want to pay particular attention to the Java
Database Connectivity (JDBC) and the Java Intranet Framework (JIF)
APIs. JDBC enables developers to write Java applications that
access databases. JIF is the key to developing intranet applications
complete with user-friendly interfaces. You learn all about JDBC
in <A HREF="ch6.htm" >Chapter 6</A>, &quot;Database Connectivity
Options,&quot; and the classes and methods of the JIF API are
explored in detail in Part III, &quot;Extending Java for Intranets.&quot;
<BR>
<P><CENTER><TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Note</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
The JIF API was developed by the authors of <I>Developing Intranet Applications with Java</I> and is added as an extra value to our readers. You will build this API in its entirety in Part III.
</BLOCKQUOTE>

</TD></TR>
</TABLE></CENTER>
<P>
<P>
The first version of Java released for general use on the Internet
was an alpha version. Alpha versions of software applications
and programming languages are generally released to developers
for review, comments, and bug fixes. The Java programming language
has come a long way since that original alpha. A major area of
change is the developer's tool kit. The current developer's tool
kit includes seven powerful tools capable of meeting the needs
of most programmers. Table 1.1 summarizes the tools in the current
JDK and describes their uses.<BR>
<P>
<CENTER><B>Table 1.1. Tools in the JDK.</B></CENTER>
<P><CENTER><TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD WIDTH=138><I>Executable</I></TD><TD WIDTH=148><I>Tool Name</I>
</TD><TD WIDTH=304><I>Description</I></TD></TR>
<TR VALIGN=TOP><TD WIDTH=138><TT>appletviewer</TT>
</TD><TD WIDTH=148>Java applet viewer</TD><TD WIDTH=304>Displays applets.
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=138><TT>java</TT></TD>
<TD WIDTH=148>Java interpreter</TD><TD WIDTH=304>Runs Java bytecode.
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=138><TT>javac</TT></TD>
<TD WIDTH=148>Java compiler</TD><TD WIDTH=304>Compiles Java programs into bytecode.
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=138><TT>javadoc</TT>
</TD><TD WIDTH=148>Java documentation generator</TD><TD WIDTH=304>Creates documentation in HTML format from Java source code.
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=138><TT>javah</TT></TD>
<TD WIDTH=148>Java header and stubs file generator</TD><TD WIDTH=304>Creates C language header and stubs files from a Java class.
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=138><TT>javap</TT></TD>
<TD WIDTH=148>Java class file disassembler</TD><TD WIDTH=304>Disassembles Java files and prints out a representation of Java bytecode.
</TD></TR>
<TR VALIGN=TOP><TD WIDTH=138><TT>jdb</TT></TD>
<TD WIDTH=148>Java language debugger</TD><TD WIDTH=304>Finds problems in your Java code.
</TD></TR>
</TABLE></CENTER>
<P>
<P><CENTER><TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Note</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
You should be very familiar with the tools in the JDK, especially the interpreter, compiler, and debugger. If you are not, you may want to refer to appendix B, &quot;JDK Tools Reference.&quot; The appendix contains helpful hints and command summaries for 
each of the JDK tools.</BLOCKQUOTE>

</TD></TR>
</TABLE></CENTER>
<P>
<H3><A NAME="JavaGetstheOfficialStampofApproval">Java Gets the
Official Stamp of Approval</A></H3>
<P>
In January 1996, JavaSoft officially released Java, version 1.0,
and the enthusiasm for Java really took off. Companies from every
sector of the business community started putting Java to work
on their intranets. These organizations include: banks, distributors,
shipping companies, advertising agencies, real estate agencies,
publishers, and manufacturers. They are using Java because it
is so easy to develop universally usable intranet applications
with Java.
<P>
On a typical network, you find one or more operating systems.
The UNIX operating system may be in use by an engineering or graphics
development division. The Windows NT operating system may be in
use by the sales division. The Macintosh System 7 may be in use
in the advertising, marketing, or desktop publishing department.
Increasingly, different operating systems are in use within the
same department or office. So what do you do when a person trained
only on Windows NT moves to an office that doesn't use Windows
NT?
<P>
You retrain the person, showing him or her how to deal with the
new operating system. You may also need to send the employee to
special classes that teach him or her how to use all the applications
installed on the new operating system. There is a tremendous difference
between a popular desktop publishing program for UNIX, FrameMaker,
and a popular desktop publishing program for Windows 95, Microsoft
Publisher.
<P>
What makes these programs so different is their interface. FrameMaker
and MS Publisher have entirely different sets of menus, options,
and commands. Why can't you develop an advanced word processor
that is usable on any operating system and features a familiar
interface on any system where the program is running? Enter Java.
With Java, you can develop applications that are usable on any
operating system and have the same familiar interface no matter
if they are running on a UNIX system or a Windows NT system.
<P>
Nowhere is the enthusiasm for Java more evident than at the Gamelan
Web site shown in Figure 1.2-the official Java repository. In
the early days of Java, Gamelan (<TT>www.gamelan.com</TT>)
was <I>the</I> place to learn about what others were doing with
Java. Today, there is such an incredible volume of Java development
that it is impossible for any organization to keep track of it
all. Still, the folks at Gamelan make a valiant effort to keep
up.
<P>
<A HREF="f1-2.gif" ><B>Figure 1.2 : </B><I>At Gamelan, you can learn about what others are doing with Java</I></A><I>.</I>
<H3><A NAME="JavainAction">Java in Action</A></H3>
<P>
If you visit Gamelan, make your way past the thousands of programs
designed for entertainment to the ones designed for their utility.
These are the programs that help you develop and add to the usefulness
of your intranet. A must see program for anyone tracking the commercial
marketplace is the WallStreetWeb. The home page for the WallStreetWeb
(<TT>www.wallstreetweb.com</TT>) is
shown in Figure 1.3.
<P>
<A HREF="f1-3.gif" ><B>Figure 1.3 : </B><I>The WallStreet Web home page.</I></A>
<P>
The WallStreetWeb is the perfect program to demonstrate the versatility
of Java. When you access the WallStreetWeb home page, the WallStreetWeb
applet is downloaded to your computer. As soon as the download
finishes and the applet starts, you see a dialog box prompting
you to enter a user name and password. This dialog box is shown
in Figure 1.4. If you have a WallStreetWeb account, you can log
in and access real-time stock quotes. If you don't have an account,
you can log in as a guest. Guests have limited access to the program's
features, but can obtain quotes on certain stocks.
<P>
<A HREF="f1-4.gif" ><B>Figure 1.4 : </B><I>Using this dialog box, you can log onto the WallStreet Web.</I></A>
<P>
The WallStreetWeb (Figure 1.5) communicates with your system using
a Web server that can be located halfway around the world from
your location, yet you can still obtain stock quotes instantly.
Even more amazing is the fact that the program may have been developed
on a completely different operating system than the one you use
regularly, yet the program downloads and runs on your system without
making any changes to the original program. This true platform
independence is what makes Java the most versatile programming
language in the world.
<P>
<A HREF="f1-5.gif" ><B>Figure 1.5 : </B><I>The WallStreetWeb applet in action.</I></A>
<P>
Another powerful feature of Java is its strict security model.
If you refer to Figure 1.4, you see a warning at the bottom of
the dialog box stating <TT>Unsigned Java
Applet Window</TT>. The warning ensures that the user knows
the program does not have a digital signature and is not to be
trusted. Java includes many other security mechanisms to ensure
the integrity of your network and that systems cannot be compromised.
<BR>
<P><CENTER><TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Note</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
Security is a major issue in network programming. In the chapters ahead you learn important security issues related to Java programming, intranets, and servers. To learn more about security in Java programming, refer to <A HREF="ch2.htm" >Chapter 2</A>.
</BLOCKQUOTE>

</TD></TR>
</TABLE></CENTER>
<P>
<P>
Platform independence and strict security are features that make
Java the perfect network programming language. As you develop
your intranet, keep these features in mind.
<H3><A NAME="RapidDevelopmentwithJava">Rapid Development with
Java</A></H3>
<P>
Not only is rapid development possible with Java, it is the status
quo. As most current Java developers know, the Java Application
Programming Interface consists of predeveloped code that you can
use in your applications. This predeveloped code is organized
into packages filled with useful classes and methods designed
to make it easy to program with Java.
<P>
The core package for the Java programming language is called <TT>java.lang</TT>.
Although the <TT>java.lang</TT> package
provides the core functionality of the Java programming language,
it is not the only package included in the official Java Developer's
Kit from JavaSoft. The official developer's kit includes eight
basic packages: <TT>java.applet</TT>,
<TT>java.awt</TT>, <TT>java.awt.image</TT>,
<TT>java.awt.peer</TT>, <TT>java.io</TT>,
<TT>java.lang</TT>, <TT>java.net</TT>,
and <TT>java.util</TT>. The JDK also
includes an add-on package called <TT>sun.tools.debug</TT>.
Together the basic and add-on packages provide everything you
need to create and debug advanced Java applications.
<P>
The API in the developer's kit is only the beginning for Java
APIs. Currently, there are eight other APIs in development by
JavaSoft:
<BLOCKQUOTE>
The Java Enterprise API provides almost everything you need to
create applications that connect to databases.
</BLOCKQUOTE>
<BLOCKQUOTE>
The Java Commerce API is the key to enabling electronic commerce.
</BLOCKQUOTE>
<BLOCKQUOTE>
The Java Management API is a comprehensive tool for building applications
that can manage networks.
</BLOCKQUOTE>
<BLOCKQUOTE>
The Java Server API provides almost everything you need to develop
Java-powered servers for the Internet and intranets.
</BLOCKQUOTE>
<BLOCKQUOTE>
The Java Media API is an advanced toolkit for creating applications
that use multi-<BR>
media.
</BLOCKQUOTE>
<BLOCKQUOTE>
The Java Beans API helps you create plug-ins and software modules
that interact with existing architectures for object linking and
embedding.
</BLOCKQUOTE>
<BLOCKQUOTE>
The Java Embedded API defines a minimal set of core functionality
that can be used in embedded devices.
</BLOCKQUOTE>
<P>
The great thing about standardized APIs is that all the packages
they contain are thoroughly tested before the API is officially
released. What this means is that you have millions of lines of
code at your fingertips. You can use this code to develop Java
applications without having to re-invent the wheel.
<P>
A perfect example of this is an application called Jompanion,
which is shown in Figure 1.6. Jompanion is a fairly advanced text
editor that I created for <I>Peter Norton's Guide to Java Programming</I>.
Jompanion includes all the features you want in a text editor-cut,
copy, paste, find, replace, replace all, adjustable font type
and size, file creation, file save, and the ability to have multiple
open files. A similar text editor written in the C programming
language has more than 10,000 lines of source code, yet because
Jompanion is written in Java, the source code is slightly more
than 800 lines.
<P>
<A HREF="f1-6.gif" ><B>Figure 1.6 : </B><I>Jompanion: A text editor written in Java.</I></A>
<H2><A NAME="UsingJavaonanIntranet"><FONT SIZE=5 COLOR=#FF0000>Using
Java on an Intranet</FONT></A></H2>
<P>
By now, you know that Java is a great programming language for
networks. What you may not know is how to put Java to use on your
intranet. In this section, you find three specific examples of
using Java to enhance an intranet. This is only a starting point
meant to get you thinking about the kinds of Java applications
you can develop.
<H3><A NAME="UsingaJavaApplicationtoTrackEmploy">Using a Java
Application to Track Employee Files</A></H3>
<P>
Every company has employees and files related to those employees.
Sometimes those files are only a few dozen pages. Other times,
the files are hundreds of pages long, especially if the file contains
a record of the employee's history with the company. Wouldn't
it be great to create a system to track, store, and access those
files instantly?
<P>
With Java, you can develop an intranet application to do just
this. Because you are using Java, the application is able to fully
access your databases, even if they are proprietary in nature.
But best of all, using the Java Database Connectivity classes
and methods, you can access several databases using the same user
interface. This means you can use a single application with a
standardized and friendly interface to create new entries in multiple
databases; to retrieve and collate information; and to update
files as necessary.<BR>
<P><CENTER><TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Note</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
In <A HREF="ch13.htm" >Chapter 13</A>, you learn firsthand how to design, code, and implement such an application. In <A HREF="ch14.htm" >Chapter 14</A>, you learn how to create an intranet application for the human resources department of your 
organization.
</BLOCKQUOTE>

</TD></TR>
</TABLE></CENTER>
<P>
<H3><A NAME="UsingaJavaApplicationtoScheduleApp">Using a Java
Application to Schedule Appointments, Meetings, and Conferences</A>
</H3>
<P>
Life in a business organization can be a rat race of meetings
with the staff, conferences with management, and appointments
with clients. Tracking, announcing, and scheduling these events
requires a great deal of time and effort. Wouldn't it be great
to have a universally accessible tool everyone at your organization
can use to check schedules and announce meetings?
<P>
Using Java as your intranet programming solution, you can create
such an application. Because Java has a standard intranet framework
API, you can develop the application using fewer resources-time
and money-and obtain a better end product. In <A HREF="ch15.htm" >Chapter 15</A>,<I>
</I>you learn all about a Java-powered intranet application for
conference room scheduling.
<H3><A NAME="UsingaJavaApplicationtoTrackWhoIs">Using a Java Application
to Track Who Is in the Office</A></H3>
<P>
In Star Trek<FONT FACE="Symbol">&#137;</FONT>, the main computer
knows the whereabouts of every person on the Starship Enterprise.
The traditional way to track who is in the office is with an in/out
board. When you remember to walk past the board on your way in
or out of the office, the board is accurate. When you forget to
update the board, the board is not accurate.
<P>
In recent years, some enterprising programmers have created electronic
versions of the in/out board. An electronic in/out board can be
run automatically when you log in or out, so it gets used. The
drawback to existing programs written in traditional programming
languages like C/C++ is that they are really only useful as long
as you and everyone else in your office uses the operating system
for which the program is designed. If some of the office uses
the Macintosh System 7 O/S and some of the office uses Windows
95, you cannot easily track or check the status of the office
staff.
<P>
When you use Java to create an electronic in/out board, you do
not have a compatibility problem. Your Java-powered in/out board
can be used by anyone in the office. In fact, your program can
be used by anyone within the company, which allows you to find
out if Susan in marketing is in her office before you leave your
desk. For tips on designing and implementing an electronic in/out
board using Java, <A HREF="ch16.htm" >see Chapter 16</A>, &quot;Online
In/Out Board.&quot;
<H2><A NAME="Summary"><FONT SIZE=5 COLOR=#FF0000>Summary</FONT></A>
</H2>
<P>
In this chapter, you learn about intranets and the Java programming
language. With an intranet, you can put the best Internet technologies
to use on your organization's network. With Java, you can create
powerful applications based on APIs that have been thoroughly
tested and proven.
<P>
By combining the two hottest technologies in use today, you get
the best of both worlds. You can create a network that is affordable,
cost effective, and highly efficient. You can build applications
for the network that have standard interfaces and are usable on
any operating system.
<P>
<HR WIDTH="100%"></P>

<CENTER><P><A HREF="#CONTENTS"><IMG SRC="cc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A><A HREF="index.htm"><IMG SRC="hb.gif" BORDER=0 HEIGHT=88 WIDTH=140></A><A HREF="ch2.htm"><IMG SRC="nc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A></P></CENTER>

<P>
<HR WIDTH="100%"></P>

</BODY>
</HTML>
