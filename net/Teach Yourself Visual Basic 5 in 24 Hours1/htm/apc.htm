<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>

<HEAD>
<!-- This document was created from RTF source by rtftohtml version 3.0.1 -->

	<META NAME="Author" Content="Steph Mineart">
	<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
	<TITLE>Without a title - Title</TITLE>
</HEAD>

<BODY TEXT="#000000" BGCOLOR="#FFFFFF">

<CENTER>
<H1><A HREF="apb.htm"><IMG SRC="../buttons/blanprev.gif" WIDTH="37" HEIGHT="37" ALIGN="BOTTOM"
BORDER="0"></A><A HREF="../index.html"><IMG SRC="../buttons/blantoc.gif"
WIDTH="37" HEIGHT="37" ALIGN="BOTTOM" BORDER="0"></A><A HREF="apd.htm"><IMG SRC="../buttons/blannext.gif"
WIDTH="37" HEIGHT="37" ALIGN="BOTTOM" BORDER="0"></A></H1>
</CENTER>

<UL>
	<LI><A HREF="#Heading1">Hour 1 Quiz</A>
	<LI><A HREF="#Heading2">Hour 1 Exercise</A>
	<LI><A HREF="#Heading3">Hour 2 Quiz</A>
	<LI><A HREF="#Heading4">Hour 2 Exercise</A>
	<LI><A HREF="#Heading5">Hour 3 Quiz</A>
	<LI><A HREF="#Heading6">Hour 3 Exercises</A>
	<LI><A HREF="#Heading7">Hour 4 Quiz</A>
	<LI><A HREF="#Heading8">Hour 4 Exercises</A>
	<LI><A HREF="#Heading9">Hour 5 Quiz</A>
	<LI><A HREF="#Heading10">Hour 5 Exercises</A>
	<LI><A HREF="#Heading11">Hour 6 Quiz</A>
	<LI><A HREF="#Heading12">Hour 6 Exercises</A>
	<LI><A HREF="#Heading13">Hour 7 Quiz</A>
	<LI><A HREF="#Heading14">Hour 7 Exercises</A>
	<LI><A HREF="#Heading15">Hour 8 Quiz</A>
	<LI><A HREF="#Heading16">Hour 8 Exercises</A>
	<LI><A HREF="#Heading17">Hour 9 Quiz</A>
	<LI><A HREF="#Heading18">Hour 9 Exercises</A>
	<LI><A HREF="#Heading19">Hour 10 Quiz</A>
	<LI><A HREF="#Heading20">Hour 10 Exercises</A>
	<LI><A HREF="#Heading21">Hour 11 Quiz</A>
	<LI><A HREF="#Heading22">Hour 11 Exercises</A>
	<LI><A HREF="#Heading23">Hour 12 Quiz</A>
	<LI><A HREF="#Heading24">Hour 12 Exercises</A>
	<LI><A HREF="#Heading25">Hour 13 Quiz</A>
	<LI><A HREF="#Heading26">Hour 13 Exercises</A>
	<LI><A HREF="#Heading27">Hour 14 Quiz</A>
	<LI><A HREF="#Heading28">Hour 14 Exercises</A>
	<LI><A HREF="#Heading29">Hour 15 Quiz</A>
	<LI><A HREF="#Heading30">Hour 15 Exercises</A>
	<LI><A HREF="#Heading31">Hour 16 Quiz</A>
	<LI><A HREF="#Heading32">Hour 16 Exercises</A>
	<LI><A HREF="#Heading33">Hour 17 Quiz</A>
	<LI><A HREF="#Heading34">Hour 17 Exercises</A>
	<LI><A HREF="#Heading35">Hour 18 Quiz</A>
	<LI><A HREF="#Heading36">Hour 18 Exercises</A>
	<LI><A HREF="#Heading37">Hour 19 Quiz</A>
	<LI><A HREF="#Heading38">Hour 19 Exercises</A>
	<LI><A HREF="#Heading39">Hour 20 Quiz</A>
	<LI><A HREF="#Heading40">Hour 20 Exercises</A>
	<LI><A HREF="#Heading41">Hour 21 Quiz</A>
	<LI><A HREF="#Heading42">Hour 21 Exercises</A>
	<LI><A HREF="#Heading43">Hour 22 Quiz</A>
	<LI><A HREF="#Heading44">Hour 22 Exercises</A>
	<LI><A HREF="#Heading45">Hour 23 Quiz</A>
	<LI><A HREF="#Heading46">Hour 23 Exercise</A>
	<LI><A HREF="#Heading47">Hour 24 Quiz</A>
	<LI><A HREF="#Heading48">Hour 24 Exercise</A>
</UL>

<P>
<HR SIZE="4">

<CENTER>
<H1><FONT COLOR="#000077">- C -<BR>
Answers</FONT></H1>
</CENTER>
<H2><A NAME="Heading1"></A><FONT COLOR="#000077">Hour 1 Quiz</FONT></H2>

<DL>
	<DD>1. To develop Windows applications<BR>
	<BR>
	2. Programming languages are now visual to handle Windows environments.<BR>
	<BR>
	3. BASIC<BR>
	<BR>
	4. Form window<BR>
	<BR>
	5. The Learning Edition is Visual Basic's least expensive start-up version. The Professional
	Edition includes additional tools, including the help compiler and the ActiveX Custom
	Control Edition. The Enterprise Edition includes all the Professional Edition tools,
	as well as advanced client/server system technology.<BR>
	<BR>
	6. The Form window holds the application's form background and all its user controls,
	such as command buttons. The Form Layout window lets you adjust the Form window's
	location on the user's screen when the user first executes the application.<BR>
	<BR>
	7. The size coordinates appear in the upper-right corner of the Visual Basic Development
	environment.<BR>
	<BR>
	8. True
</DL>

<H2><A NAME="Heading2"></A><FONT COLOR="#000077">Hour 1 Exercise</FONT></H2>
<P>No answer is necessary.
<H2><A NAME="Heading3"></A><FONT COLOR="#000077">Hour 2 Quiz</FONT></H2>

<DL>
	<DD>1. Windows programs are visual and include graphic elements the user interacts
	with to control the program. In addition, Windows programs respond to events, whereas
	text-based programs guide the user more rigidly and the programs control the user's
	next move.<BR>
	<BR>
	2. Events occur during your application's execution and usually, but not always,
	occur in response to the user's action, such as a mouse button click or a keystroke.<BR>
	<BR>
	3. The Project window's component filenames use common filename extensions such as
	<TT>.vbp</TT> and <TT>.bas</TT>, but Visual Basic does not use filename extensions
	when referring to those components.<BR>
	<BR>
	4. Compilation<BR>
	<BR>
	5. The procedure's event procedure determines the code that executes when the event
	occurs.<BR>
	<BR>
	6. False<BR>
	<BR>
	7. Control property changes show themselves at design time and at runtime, whereas
	event procedures execute only at runtime.
</DL>

<H2><A NAME="Heading4"></A><FONT COLOR="#000077">Hour 2 Exercise</FONT></H2>
<P>No answer is necessary.
<H2><A NAME="Heading5"></A><FONT COLOR="#000077">Hour 3 Quiz</FONT></H2>

<DL>
	<DD>1. Double-click the control on the Toolbox window to place the control on the
	form quickly.<BR>
	<BR>
	2. The sizing handles let you move the control and change its size.<BR>
	<BR>
	3. Hold down the Ctrl key when you click each control, or lasso multiple controls
	by dragging a square around them with the mouse.<BR>
	<BR>
	4. True (such as the <TT>Top</TT> and <TT>Left</TT> properties)<BR>
	<BR>
	5. The <TT>Caption</TT> property sets the form title.<BR>
	<BR>
	6. A control is a type of object; objects also can include the form, menus, and other
	application components.<BR>
	<BR>
	7. Add tooltips to controls when you place the controls on the form.<BR>
	<BR>
	8. A dialog box appears when you click a control property's ellipsis to let you fill
	in multiple values related to the control property.
</DL>

<H2><A NAME="Heading6"></A><FONT COLOR="#000077">Hour 3 Exercises</FONT></H2>

<DL>
	<DD>1. See the CD-ROM's project named <TT>Lesson 3 Exer 1</TT>.<BR>
	<BR>
	2. See the CD-ROM's project named <TT>Lesson 3 Exer 2</TT>.
</DL>

<H2><A NAME="Heading7"></A><FONT COLOR="#000077">Hour 4 Quiz</FONT></H2>

<DL>
	<DD>1. False; the focus appears at runtime, not at design time.<BR>
	<BR>
	2. False<BR>
	<BR>
	3. Labels<BR>
	<BR>
	4. Set the control's <TT>Cancel</TT> property to <TT>True</TT>.<BR>
	<BR>
	5. The <TT>Enabled</TT> property<BR>
	<BR>
	6. Labels do not respond to user-generated events.<BR>
	<BR>
	7. The label expands horizontally before you have a chance to set the <TT>WordWrap</TT>
	property. <TT>WordWrap</TT> does you no good when the label is so long no wrap is
	necessary.<BR>
	<BR>
	8. The form may not hold multiple autosizing labels that hold a large amount of text.
</DL>

<H2><A NAME="Heading8"></A><FONT COLOR="#000077">Hour 4 Exercises</FONT></H2>

<DL>
	<DD>1. See the CD-ROM's project named <TT>Lesson 4 Exer 1</TT>.<BR>
	<BR>
	2. See the CD-ROM's project named <TT>Lesson 4 Exer 2</TT>.
</DL>

<H2><A NAME="Heading9"></A><FONT COLOR="#000077">Hour 5 Quiz</FONT></H2>

<DL>
	<DD>1. A data type describes the kind of data a variable can hold.<BR>
	<BR>
	2. A string holds zero or more characters whereas a boolean data type holds only
	one of two values, <TT>True</TT> or <TT>False</TT>.<BR>
	<BR>
	3. Option buttons and check boxes<BR>
	<BR>
	4. A literal's value never changes.<BR>
	<BR>
	5. <TT>12Months</TT>, <TT>85</TT><BR>
	<BR>
	6. The plus sign performs addition and concatenation. In addition, the equal sign
	assigns values as well as tests for equality.<BR>
	<BR>
	7. Fixed-length strings set a limit on the number of characters they can hold.<BR>
	<BR>
	8. a. 8<BR>
	<BR>
	b. 8<BR>
	<BR>
	c. 32<BR>
	<BR>
	d. 24
</DL>

<H2><A NAME="Heading10"></A><FONT COLOR="#000077">Hour 5 Exercises</FONT></H2>

<DL>
	<DD>1. <TT>Dim strFirst As String</TT>
</DL>



<BLOCKQUOTE>
	<PRE><FONT COLOR="#0066FF"><TT>Dim strLast As String</TT>
<TT>Dim intAge As Integer</TT>
<TT>Dim sngTaxRate as Single</TT>
<TT>Dim blnMarried As Boolean</TT></FONT></PRE>

</BLOCKQUOTE>

<PRE><FONT COLOR="#0066FF"></FONT></PRE>

<DL>
	<DD>2. See the CD-ROM's project named <TT>Lesson 5 Exer 2</TT>.
</DL>

<H2><A NAME="Heading11"></A><FONT COLOR="#000077">Hour 6 Quiz</FONT></H2>

<DL>
	<DD>1. A message box is not a control, but a dialog box that appears when needed
	to get information from the user. A text box is a control that resides on the form.<BR>
	<BR>
	2. A text box stays on the screen longer, in most cases, than an input box.<BR>
	<BR>
	3. When you use a named literal instead of placing literal values throughout an application,
	you only need to change one line if you have to modify the literal's value.<BR>
	<BR>
	4. The apostrophe and the <TT>Rem</TT> statement are both remarks.<BR>
	<BR>
	5. Remarks are for people who look at your program code.<BR>
	<BR>
	6. Modality determines how the dialog box reacts to the user's input.<BR>
	<BR>
	7. You can display one of four icons in a message box.<BR>
	<BR>
	8. False; you can return a maximum of one value from a function.<BR>
	<BR>
	9. The input box returns the default value if the user does not change the default
	value.<BR>
	<BR>
	10. True
</DL>

<H2><A NAME="Heading12"></A><FONT COLOR="#000077">Hour 6 Exercises</FONT></H2>

<DL>
	<DD>1. <FONT COLOR="#0066FF"><TT>` Programmer name: Julie Russell</TT></FONT><TT></TT>
</DL>



<BLOCKQUOTE>
	<PRE><FONT COLOR="#0066FF"><TT>` Date: November 27, 1999</TT>
<TT>` This program is to calculate sales taxes</TT>
<TT>` based on the customer sales values</TT></FONT></PRE>

</BLOCKQUOTE>

<PRE><FONT COLOR="#0066FF"></FONT></PRE>

<DL>
	<DD>2. <TT>varAge = InputBox(&quot;How old are you?&quot;, &quot;Age Request&quot;,
	&quot;25&quot;)</TT>
</DL>

<H2><A NAME="Heading13"></A><FONT COLOR="#000077">Hour 7 Quiz</FONT></H2>

<DL>
	<DD>1. Comparison operators return boolean results and perform no math.<BR>
	<BR>
	2. The ASCII table determines the order of character comparisons.<BR>
	<BR>
	3. a. True<BR>
	<BR>
	b. True<BR>
	<BR>
	c. False<BR>
	<BR>
	d. False<BR>
	<BR>
	4. Code the <TT>Else</TT> portion if you want to specify execution for the <TT>If</TT>'s
	false comparison result.<BR>
	<BR>
	5. True<BR>
	<BR>
	6. <TT>Select Case</TT><BR>
	<BR>
	7. <TT>Case <I>expr1</I> To <I>expr2</I></TT><BR>
	<BR>
	8. The statement following the <TT>End Select</TT> executes.<BR>
	<BR>
	9. Every statement in the code block executes if that leg of the <TT>Select Case</TT>
	executes.<BR>
	<BR>
	10. The <TT>End Else</TT> should be <TT>End If</TT>.
</DL>

<H2><A NAME="Heading14"></A><FONT COLOR="#000077">Hour 7 Exercises</FONT></H2>

<DL>
	<DD>1. <TT>If (A &gt; 3) And (B &gt; 10) Then</TT>
</DL>



<BLOCKQUOTE>
	<PRE><FONT COLOR="#0066FF"><TT>      lblAns.Caption = &quot;Yes&quot;</TT>
<TT>End If</TT></FONT></PRE>

</BLOCKQUOTE>

<PRE><FONT COLOR="#0066FF"></FONT></PRE>

<DL>
	<DD>2. <TT>If (X &gt;= 10) And (Y &lt; 20) Then</TT>
</DL>

<H2><A NAME="Heading15"></A><FONT COLOR="#000077">Hour 8 Quiz</FONT></H2>

<DL>
	<DD>1. Your program might need to repeat one or more statements.<BR>
	<BR>
	2. Four<BR>
	<BR>
	3. False; they check for the condition at different locations in the loop.<BR>
	<BR>
	4. The <TT>Do-Loop While</TT> loop continues as long as the condition is <TT>True</TT>
	and the <TT>Do-Loop Until</TT> loop continues as long as the condition is <TT>False</TT>.<BR>
	<BR>
	5. The <TT>Do Until</TT> checks its condition at the top of the loop.<BR>
	<BR>
	6. <TT>Val()</TT> converts string values to numbers.<BR>
	<BR>
	7. True if you use a negative <TT>Step</TT> value<BR>
	<BR>
	8. 10 times<BR>
	<BR>
	9. 1<BR>
	<BR>
	10. False; <TT>Exit</TT> supports several forms, including an <TT>Exit</TT> that
	exits the current subroutine, an <TT>Exit</TT> that exits the current function, and
	an <TT>Exit</TT> that exits the current loop.
</DL>

<H2><A NAME="Heading16"></A><FONT COLOR="#000077">Hour 8 Exercises</FONT></H2>

<DL>
	<DD>1. See the CD-ROM's project named <TT>Lesson 8 Exer 1</TT>.<BR>
	<BR>
	2. <TT>Dim strAge As String</TT>
</DL>



<BLOCKQUOTE>
	<PRE><FONT COLOR="#0066FF"><TT>Dim intAge As Integer</TT>
<TT>Dim intPress As Integer</TT>
<TT>Do</TT>
<TT>   strAge = InputBox(&quot;How old are you?&quot;, &quot;Age Ask&quot;)</TT>
<TT>   ` Check for the Cancel command button</TT>
<TT>   If (strAge = &quot;&quot;) Then</TT>
<TT>      End   ` Terminate program</TT>
<TT>   End If</TT>
<TT>   intAge = Val(strAge)</TT>
<TT>   If (intAge &lt; 10) Then</TT>
<TT>      ` The user's age is too low</TT>
<TT>      intPress = MsgBox(&quot;Your age is too low!&quot; _</TT>
<TT>                 vbExclamation, &quot;Error!&quot;)</TT>
<TT>   ElseIf (intAge &gt; 99) Then</TT>
<TT>      ` The user's age is too high</TT>
<TT>      intPress = MsgBox(&quot;Your age is too high!&quot;, _</TT>
<TT>                 vbExclamation, &quot;Error!&quot;)</TT>
<TT>   End If</TT>
<TT>Loop While ((intAge &lt; 10) Or (intAge &gt; 99))</TT></FONT></PRE>

</BLOCKQUOTE>

<PRE><FONT COLOR="#0066FF"></FONT></PRE>
<H2><A NAME="Heading17"></A><FONT COLOR="#000077">Hour 9 Quiz</FONT></H2>

<DL>
	<DD>1. The <TT>StartUpPosition</TT> determines the form's initial location on the
	screen.<BR>
	<BR>
	2. So the user can quickly move to the text box next to the label<BR>
	<BR>
	3. Enter <TT>ToolTipText</TT> properties when you add controls because you are more
	familiar with the controls' purpose at that time.<BR>
	<BR>
	4. A control array is a collection of controls that have the same name and many similar
	properties.<BR>
	<BR>
	5. Visual Basic assumes that you want to add a similar control, and control arrays
	often hold similar controls.<BR>
	<BR>
	6. Lock the text in a text box when you don't want the user to be able to change
	the text.<BR>
	7. Unload the form and then issue the <TT>End</TT> statement.<BR>
	<BR>
	8. A runtime error occurs because you cannot divide by zero.<BR>
	<BR>
	9. True; <TT>Caption</TT> is a label's default property. Of course the wording differs,
	but the statements perform the same action.<BR>
	<BR>
	10. A function procedure returns a value to the calling procedure, whereas a subroutine
	procedure never returns a value.
</DL>

<H2><A NAME="Heading18"></A><FONT COLOR="#000077">Hour 9 Exercises</FONT></H2>

<DL>
	<DD>1. See the CD-ROM's project named <TT>Lesson 9 Exer 1</TT>.<BR>
	<BR>
	2. See the CD-ROM's project named <TT>Lesson 9 Exer 2</TT>.
</DL>

<H2><A NAME="Heading19"></A><FONT COLOR="#000077">Hour 10 Quiz</FONT></H2>

<DL>
	<DD>1. At runtime<BR>
	<BR>
	2. The <TT>AddItem</TT> method<BR>
	<BR>
	3. The <TT>ListCount</TT> method<BR>
	<BR>
	4. True<BR>
	<BR>
	5. 3<BR>
	<BR>
	6. Specify the <TT>Style</TT> property to change a combo box style.<BR>
	<BR>
	7. False; users cannot enter items into a drop-down list box.<BR>
	<BR>
	8. A collection of variables with the same name<BR>
	<BR>
	9. 9<BR>
	<BR>
	10. True
</DL>

<H2><A NAME="Heading20"></A><FONT COLOR="#000077">Hour 10 Exercises</FONT></H2>

<DL>
	<DD>1. See the CD-ROM's project named <TT>Lesson 10 Exer 1</TT>.<BR>
	<BR>
	2. See the CD-ROM's project named <TT>Lesson 10 Exer 2</TT>.
</DL>

<H2><A NAME="Heading21"></A><FONT COLOR="#000077">Hour 11 Quiz</FONT></H2>

<DL>
	<DD>1. False<BR>
	<BR>
	2. The option clicked becomes the selected option button, and the one that was selected
	no longer is selected.<BR>
	<BR>
	3. The item might be temporarily unavailable.<BR>
	<BR>
	4. The check box becomes selected, and any others that were already selected still
	are selected.<BR>
	<BR>
	5. True<BR>
	<BR>
	6. Any control can go on a frame.<BR>
	<BR>
	7. The <TT>Small Change</TT> property determines the amount of scrolling that takes
	place when the user clicks the scroll bar arrows and the <TT>Large Change</TT> property
	determines the amount of scrolling that takes place when the user clicks the scroll
	bar on either side of the scroll thumb.<BR>
	<BR>
	8. The <TT>Value</TT> property changes when the user clicks the scrollbar.<BR>
	<BR>
	9. False; the Timer control triggers events every time a fixed number of milliseconds
	pass.<BR>
	<BR>
	10. False; through programming you can make a single Timer control any timed interval.
</DL>

<H2><A NAME="Heading22"></A><FONT COLOR="#000077">Hour 11 Exercises</FONT></H2>

<DL>
	<DD>1. The <TT>Index</TT> value that you use in the <TT>Select Case</TT> will be
	the argument passed to the procedure.<BR>
	<BR>
	2. The form requires no frame because the user can select multiple check boxes at
	once, unlike option buttons.<BR>
	<BR>
	3. Set the Timer control's <TT>Interval</TT> property <TT>1000</TT>. Use an <TT>If</TT>
	at the start of the timer's event procedure so that the label's size grows no larger
	than 70 points.
</DL>

<H2><A NAME="Heading23"></A><FONT COLOR="#000077">Hour 12 Quiz</FONT></H2>

<DL>
	<DD>1. 6<BR>
	<BR>
	2. Programming is easier and your applications are more consistent with each other
	and with other Windows applications your users already know.<BR>
	<BR>
	3. True<BR>
	<BR>
	4. False; these actions are available all from <I>one</I> control, the Common Dialog
	Box control.<BR>
	<BR>
	5. The <TT>Filter</TT> property controls the filename extensions that appear.<BR>
	<BR>
	6. <TT>ShowColor</TT>, <TT>ShowFont</TT>, <TT>ShowHelp</TT>, <TT>ShowOpen</TT>, <TT>ShowPrinter</TT>,
	and <TT>ShowSave</TT><BR>
	<BR>
	7. The <TT>Type</TT> property is not set.<BR>
	<BR>
	8. Check the <TT>FileName</TT> property.<BR>
	<BR>
	9. False<BR>
	<BR>
	10. The Printer dialog box does no printing but only sets up printing.
</DL>

<H2><A NAME="Heading24"></A><FONT COLOR="#000077">Hour 12 Exercises</FONT></H2>

<DL>
	<DD>1. No answer is necessary.<BR>
	<BR>
	2. See the CD-ROM's project named <TT>Lesson 12 Exer 2</TT>.<BR>
	<BR>
	3. No answer is necessary.<BR>
	<BR>
	4. See the CD-ROM's project named <TT>Lesson 12 Exer 4</TT>.
</DL>

<H2><A NAME="Heading25"></A><FONT COLOR="#000077">Hour 13 Quiz</FONT></H2>

<DL>
	<DD>1. Your programs are easier to write and easier to maintain when you write structured
	code.<BR>
	<BR>
	2. False; structured programming puts off details.<BR>
	<BR>
	3. True<BR>
	<BR>
	4. The keyword should be <TT>Sub</TT>.<BR>
	<BR>
	5. If the procedure uses no arguments, <TT>Call</TT> is optional.<BR>
	<BR>
	6. <TT>X</TT> is module global and <TT>Y</TT> is project global. The variables would
	be the same if they appeared in an external module.<BR>
	<BR>
	7. Don't include the array subscript.<BR>
	<BR>
	8. The arguments are local to the calling procedure so the called procedure needs
	to know the data types being passed.<BR>
	<BR>
	9. By the passed argument list<BR>
	<BR>
	10. <TT>ByRef</TT> is the default argument passing process, so if you want to pass
	by reference, you do not need to specify the <TT>ByRef</TT> keyword. If, however,
	you want to pass by value, you must specify <TT>ByVal</TT>.
</DL>

<H2><A NAME="Heading26"></A><FONT COLOR="#000077">Hour 13 Exercises</FONT></H2>

<DL>
	<DD>1. <TT>Public Function By10 (ByRef intVal As Integer) As Integer</TT>
</DL>



<BLOCKQUOTE>
	<PRE><FONT COLOR="#0066FF"><TT>  By10 = intVal * 10</TT>
<TT>End Function</TT></FONT></PRE>

</BLOCKQUOTE>

<PRE><FONT COLOR="#0066FF"></FONT></PRE>

<DL>
	<DD>2. <TT>Public Sub LblSng (ByVal a1 As Single, _</TT>
</DL>



<BLOCKQUOTE>
	<PRE><FONT COLOR="#0066FF"><TT>      ByVal a2 As Single, ByVal a3 As single)</TT>
<TT>   lblSng1.Caption = a1</TT>
<TT>   lblSng2.Caption = a2</TT>
<TT>   lblSng3.Caption = a3</TT>
<TT>End Sub</TT></FONT></PRE>

</BLOCKQUOTE>

<PRE><FONT COLOR="#0066FF"></FONT></PRE>
<H2><A NAME="Heading27"></A><FONT COLOR="#000077">Hour 14 Quiz</FONT></H2>

<DL>
	<DD>1. None; the built-in functions are part of the Visual Basic language.<BR>
	<BR>
	2. a. <TT>abc</TT><BR>
	<BR>
	b. <TT>efg</TT><BR>
	<BR>
	c. <TT>cde</TT><BR>
	<BR>
	d. <TT>bcdefg</TT><BR>
	<BR>
	3. A statement<BR>
	<BR>
	4. A function<BR>
	<BR>
	5. a. <TT>20</TT><BR>
	<BR>
	b. <TT>20</TT><BR>
	<BR>
	c. <TT>-2</TT><BR>
	<BR>
	d. <TT>-3</TT><BR>
	<BR>
	6. 10<BR>
	<BR>
	7. 12:56<BR>
	<BR>
	8. A thousands separator is used at each thousand's place in a number. For example,
	a comma appears as this number's thousand's separator: 45,419.12.<BR>
	<BR>
	9. False; use <TT>Format()</TT> to display your dates in the format you want them
	to appear.<BR>
	<BR>
	10. True
</DL>

<H2><A NAME="Heading28"></A><FONT COLOR="#000077">Hour 14 Exercises</FONT></H2>

<DL>
	<DD>1. <TT>Dim strASCII As String(256)</TT>
</DL>



<BLOCKQUOTE>
	<PRE><FONT COLOR="#0066FF"><TT>For intCtr = 0 To 255</TT>
<TT>  StrASCII(intCtr) = Chr(intCtr)</TT>
<TT>Next intCtr</TT></FONT></PRE>

</BLOCKQUOTE>

<PRE><FONT COLOR="#0066FF"></FONT></PRE>

<DL>
	<DD>2. <TT>Public Sub getTime()</TT>
</DL>



<BLOCKQUOTE>
	<PRE><FONT COLOR="#0066FF"><TT>  Dim dteTimeIn As Date</TT>
<TT>  Dim dteTimeOut As Date</TT>
<TT>  Dim lngSec As Long</TT>
<TT>  Dim intMin As Integer</TT>
<TT>  Dim intHours As Integer</TT>
<TT>  </TT>
<TT>  dteTimeIn = InputBox(&quot;What time did you check in?&quot;, &quot;Check In&quot;)</TT>
<TT>  dteTimeOut = InputBox(&quot;What time did you check out?&quot;, &quot;Check Out&quot;)</TT>
<TT>  lngSec = DateDiff(&quot;s&quot;, dteTimeIn, dteTimeOut)</TT>
<TT>  intMin = DateDiff(&quot;n&quot;, dteTimeIn, dteTimeOut)</TT>
<TT>  intHours = DateDiff(&quot;h&quot;, dteTimeIn, dteTimeOut)</TT>
<TT>  </TT>
<TT>  lblSecWorked.Caption = lngSec</TT>
<TT>  lblMinWorked.Caption = intMin</TT>
<TT>  lblHoursWorked.Caption = intMin/60</TT>
<TT>End Sub</TT></FONT></PRE>

</BLOCKQUOTE>

<PRE><FONT COLOR="#0066FF"></FONT></PRE>

<DL>
	<DD>3. <TT>` You may want to add input validation to ensure</TT>
</DL>



<BLOCKQUOTE>
	<PRE><FONT COLOR="#0066FF"><TT>` that the user enters a reasonable age.</TT>
<TT>Public Sub getTime()</TT>
<TT>  Dim dteBirth As Date</TT>
<TT>  Dim intYrsRetire As Integer</TT>
<TT>  Dim intAge As Integer</TT>
<TT>  </TT>
<TT>  Do</TT>
<TT>    dteBirth = InputBox(&quot;When were you born?&quot;, &quot;Birthday&quot;)</TT>
<TT>  Loop Until IsDate(dteBirth)</TT>
<TT>  </TT>
<TT>  intAge = DateDiff(&quot;yyyy&quot;, dteBirth, Now)</TT>
<TT>  If intAge &gt;= 65 Then</TT>
<TT>    msg = MsgBox(&quot;Congratulations on a long life!&quot; _</TT>
<TT>          , vbExclamation, &quot;It's great!&quot;)</TT>
<TT>  Else</TT>
<TT>     intYrsRetire = 65 - intAge</TT>
<TT>     msg = MsgBox(&quot;You have only &quot; &amp; intYrsRetire &amp; _</TT>
<TT>           &quot; years to retire!&quot;, vbExclamation, &quot;Soon...!&quot;)</TT>
<TT>  End If</TT>
<TT>  End Sub</TT></FONT></PRE>

</BLOCKQUOTE>

<PRE><FONT COLOR="#0066FF"></FONT></PRE>
<H2><A NAME="Heading29"></A><FONT COLOR="#000077">Hour 15 Quiz</FONT></H2>

<DL>
	<DD>1. A database is an organized collection of one or more tables of records.<BR>
	<BR>
	2. A record is a row, and a field is a column from a file.<BR>
	<BR>
	3. A table is a file in a relational database.<BR>
	<BR>
	4. The file is overwritten.<BR>
	<BR>
	5. The file is added to.<BR>
	<BR>
	6. All open files<BR>
	<BR>
	7. False; only for the tables you want to work with<BR>
	<BR>
	8. If the user changes the bound control, the underlying database value changes also.<BR>
	<BR>
	9. An option button or a check box<BR>
	<BR>
	10. Use the VB Data Form Wizard
</DL>

<H2><A NAME="Heading30"></A><FONT COLOR="#000077">Hour 15 Exercises</FONT></H2>

<DL>
	<DD>1. <TT>Public Sub WriteValues()</TT>
</DL>



<BLOCKQUOTE>
	<PRE><FONT COLOR="#0066FF"><TT>  Open &quot;c:\friends.dat&quot; For Output As #1</TT>
<TT>  Write #1, &quot;George&quot;, 35, &quot;912-3344&quot;</TT>
<TT>  Write #1, &quot;Elaine&quot;, 31, &quot;649-1999&quot;</TT>
<TT>  Write #1, &quot;Jerry&quot;, 34, &quot;912-5712&quot;</TT>
<TT>  Write #1, &quot;Kramer&quot;, 38, &quot;747-1123&quot;</TT>
<TT>  Write #1, &quot;Newman&quot;, 32, &quot;648-2900&quot;</TT>
<TT>  Close #1</TT>
<TT>End Sub</TT>
<TT>Public Sub ReadValues()</TT>
<TT>  Dim strName(6) As String</TT>
<TT>  Dim intAge(6) As Integer</TT>
<TT>  Dim strPhone(6) As String</TT>
<TT>  Open &quot;c:\friends.dat&quot; For Input As #1</TT>
<TT>  For intCtr = 1 to 5</TT>
<TT>     Input #1, strName(intCtr), intAge(intCtr), _</TT>
<TT>               StrPhone(intCtr)</TT>
<TT>  Next intCtr</TT>
<TT>  Close #1</TT>
<TT>  ` Code goes here that processes data</TT>
<TT>End Sub</TT></FONT></PRE>

</BLOCKQUOTE>

<PRE><FONT COLOR="#0066FF"></FONT></PRE>

<DL>
	<DD>2. See the CD-ROM's project named <TT>Lesson 15 Exer 2</TT>.<BR>
	<BR>
	3. No answer is available.
</DL>

<H2><A NAME="Heading31"></A><FONT COLOR="#000077">Hour 16 Quiz</FONT></H2>

<DL>
	<DD>1. The output goes to the Windows print manager.<BR>
	<BR>
	2. An error message box appears.<BR>
	<BR>
	3. The <TT>Printer</TT> object receives data sent by the <TT>Print</TT> method.<BR>
	<BR>
	4. Specify the <TT>Copies</TT> property.<BR>
	<BR>
	5. False<BR>
	<BR>
	6. 14<BR>
	<BR>
	7. Use <TT>Chr()</TT> to print special characters on the printer.<BR>
	<BR>
	8. <TT>12</TT><BR>
	<BR>
	9. False<BR>
	<BR>
	10. True
</DL>

<H2><A NAME="Heading32"></A><FONT COLOR="#000077">Hour 16 Exercises</FONT></H2>

<DL>
	<DD>1. <TT>Printer.Print Chr(209)</TT><BR>
	<BR>
	2. <TT>For intCtr = 32 to 255</TT>
</DL>



<BLOCKQUOTE>
	<PRE><FONT COLOR="#0066FF"><TT>  Printer.Print Chr(intCtr)</TT>
<TT>Next intCtr</TT></FONT></PRE>

</BLOCKQUOTE>

<PRE><FONT COLOR="#0066FF"></FONT></PRE>

<DL>
	<DD>3. See the CD-ROM's project named <TT>Lesson 16 Exer 3</TT>.
</DL>

<H2><A NAME="Heading33"></A><FONT COLOR="#000077">Hour 17 Quiz</FONT></H2>

<DL>
	<DD>1. True<BR>
	<BR>
	2. True<BR>
	<BR>
	3. <TT>mnu</TT><BR>
	<BR>
	4. <TT>mnuEditSelectAll</TT><BR>
	<BR>
	5. The indentation determines the menu level.<BR>
	<BR>
	6. False<BR>
	<BR>
	7. File&#160;|&#160;Exit<BR>
	<BR>
	8. The user will not adapt as quickly to your application.<BR>
	<BR>
	9. Click<BR>
	<BR>
	10. The <TT>Checked</TT> property
</DL>

<H2><A NAME="Heading34"></A><FONT COLOR="#000077">Hour 17 Exercises</FONT></H2>

<DL>
	<DD>1. See the CD-ROM's project named <TT>Lesson 17 Exer 1</TT>.<BR>
	<BR>
	2. The answer is not available, so that copyright information can be maintained in
	Visual Basic's prepackaged <TT>Atm</TT> example.
</DL>

<H2><A NAME="Heading35"></A><FONT COLOR="#000077">Hour 18 Quiz</FONT></H2>

<DL>
	<DD>1. The Picture Box and Image controls display graphic images.<BR>
	<BR>
	2. The Image control is more efficient than the Picture Box control.<BR>
	<BR>
	3. The Image control will shrink to measure the same size as the loaded picture.<BR>
	<BR>
	4. The Picture Box does not resize to measure the same size as the loaded graphic
	image.<BR>
	<BR>
	5. The Image control enlarges to display the entire image.<BR>
	<BR>
	6. The Picture Box does not enlarge to display the full image, but rather, clips
	the image.<BR>
	<BR>
	7. The assignment is missing the <TT>LoadPicture()</TT> function.<BR>
	<BR>
	8. The Timer control helps you control animation effects.<BR>
	<BR>
	9. False; only local variables can be static.<BR>
	<BR>
	10. Visual Basic initializes static variables at compile time, so the first time
	through the procedure, the variable has an initial value.
</DL>

<H2><A NAME="Heading36"></A><FONT COLOR="#000077">Hour 18 Exercises</FONT></H2>

<DL>
	<DD>1. Set the Timer control's <TT>Enabled</TT> property to <TT>False</TT> in the
	Properties window. In the <TT>Click</TT> event procedure, set the <TT>Enabled</TT>
	property to <TT>True</TT> to begin the animation. Be sure to set the command button's
	<TT>Style</TT> property to <TT>Graphical</TT> before putting the happy face on the
	button.<BR>
	<BR>
	2. No answer is available.
</DL>

<H2><A NAME="Heading37"></A><FONT COLOR="#000077">Hour 19 Quiz</FONT></H2>

<DL>
	<DD>1. The Professional and the Enterprise Editions support the Toolbar control.<BR>
	<BR>
	2. The Toolbar control does not appear as an intrinsic control on the Toolbox window.<BR>
	<BR>
	3. The Image List control<BR>
	<BR>
	4. The <TT>Key</TT> property determines which string returns when a toolbar button
	is clicked.<BR>
	<BR>
	5. The argument value determines which toolbar button is clicked.<BR>
	<BR>
	6. 7<BR>
	<BR>
	7. <TT>BorderStyle</TT><BR>
	<BR>
	8. False; <TT>LoadPicture()</TT> is for the Picture Box and Image controls.<BR>
	<BR>
	9. The <TT>FillStyle</TT> property determines the interior pattern of shapes.<BR>
	<BR>
	10. True; you can set the shape's border and interior colors.
</DL>

<H2><A NAME="Heading38"></A><FONT COLOR="#000077">Hour 19 Exercises</FONT></H2>

<DL>
	<DD>1. See the CD-ROM's project named <TT>Lesson 19 Exer 1</TT>.<BR>
	<BR>
	2. See the CD-ROM's project named <TT>Lesson 19 Exer 2</TT>.<BR>
	<BR>
	3. See the CD-ROM's project named <TT>Lesson 19 Exer 3</TT>.
</DL>

<H2><A NAME="Heading39"></A><FONT COLOR="#000077">Hour 20 Quiz</FONT></H2>

<DL>
	<DD>1. Syntax errors are the easiest to find.<BR>
	<BR>
	2. Logic errors are the hardest to find.<BR>
	<BR>
	3. A runtime error occurred.<BR>
	<BR>
	4. Visual Basic's title bar tells the current mode.<BR>
	<BR>
	5. A stopping point during a program's execution where all variables are kept active.<BR>
	<BR>
	6. Look at the variables, add variables to the Watch window, single-step through
	the rest of the program, add other breakpoints, remove breakpoints, or terminate
	the execution.<BR>
	<BR>
	7. Click the Debug toolbar's Step Through button at any breakpoint. You can also
	press F8 to step into the next line or Shift+F8 to step over the line.<BR>
	<BR>
	8. False<BR>
	<BR>
	9. Click the Quick Watch button or rest the mouse pointer over the variable to see
	its value.<BR>
	<BR>
	10. The <TT>Print</TT> method displays values in the Immediate window.
</DL>

<H2><A NAME="Heading40"></A><FONT COLOR="#000077">Hour 20 Exercises</FONT></H2>

<DL>
	<DD>1. Larry is not printing to the <TT>Debug</TT> object.<BR>
	<BR>
	2. No answer is necessary.
</DL>

<H2><A NAME="Heading41"></A><FONT COLOR="#000077">Hour 21 Quiz</FONT></H2>

<DL>
	<DD>1. VB custom controls<BR>
	<BR>
	2. Use the Components dialog box.<BR>
	<BR>
	3. From online services such as the Internet and CompuServe, and you can also write
	your own<BR>
	<BR>
	4. True<BR>
	<BR>
	5. Use the existing similar control as a basis for the new ActiveX control.<BR>
	<BR>
	6. Nothing<BR>
	<BR>
	7. The user can double-click the embedded object or its icon.<BR>
	<BR>
	8. An ActiveX document is an application that an ActiveX container is capable of
	displaying during execution as a child process.<BR>
	<BR>
	9. Internet Explorer is an ActiveX container.<BR>
	<BR>
	10. Run the ActiveX Document Migration Wizard to convert a form to an ActiveX document.
</DL>

<H2><A NAME="Heading42"></A><FONT COLOR="#000077">Hour 21 Exercises</FONT></H2>

<DL>
	<DD>1. No answer is available, so that copyright information can be maintained for
	Word and WordPad.<BR>
	<BR>
	2. No answer is needed. Run the wizard to convert the application to an ActiveX document.
</DL>

<H2><A NAME="Heading43"></A><FONT COLOR="#000077">Hour 22 Quiz</FONT></H2>

<DL>
	<DD>1. <TT>Form</TT>, <TT>Printer</TT>, and <TT>Screen</TT><BR>
	<BR>
	2. A class defines objects, and an object is a single instance of a class.<BR>
	<BR>
	3. Visual Basic creates a new object.<BR>
	<BR>
	4. True<BR>
	<BR>
	5. True<BR>
	<BR>
	6. One<BR>
	<BR>
	7. Use the <TT>Before</TT> named argument to insert items at the beginning of a collection.<BR>
	<BR>
	8. <TT>GetObject()</TT><BR>
	<BR>
	9. Active Automation<BR>
	<BR>
	10. False
</DL>

<H2><A NAME="Heading44"></A><FONT COLOR="#000077">Hour 22 Exercises</FONT></H2>

<DL>
	<DD>1. <TT>Public Sub FontDecrease()</TT>
</DL>



<BLOCKQUOTE>
	<PRE><FONT COLOR="#0066FF"><TT>  For intCtr = 0 to Controls.Count - 1</TT>
<TT>     Controls(intCtr).Font.Size = Controls(intCtr).Font.Size _</TT>
<TT>                                  / 2</TT>
<TT>  Next intCtr</TT>
<TT>End Sub</TT></FONT></PRE>

</BLOCKQUOTE>

<PRE><FONT COLOR="#0066FF"></FONT></PRE>

<DL>
	<DD>2. No answer is necessary.
</DL>

<H2><A NAME="Heading45"></A><FONT COLOR="#000077">Hour 23 Quiz</FONT></H2>

<DL>
	<DD>1. The program loads and runs faster, is more secure, and does not require Visual
	Basic's Development Environment to run.<BR>
	<BR>
	2. False; use the Make option.<BR>
	<BR>
	3. To maintain records of multiple versions of an application<BR>
	<BR>
	4. Use the form's icon located in the form's <TT>Icon</TT> property.<BR>
	<BR>
	5. False; you must run the installation routine from the Start menu.<BR>
	<BR>
	6. A dependency file is a file needed by an application's installation to install
	and execute properly. The dependency file specifies the names of all the files the
	application requires, such as certain fonts, controls, and ActiveX files.<BR>
	<BR>
	7. True<BR>
	<BR>
	8. In case you want to copy the installation to floppy disks<BR>
	<BR>
	9. The installation routine gives the user a chance to save the newer version.<BR>
	<BR>
	10. The user can run the uninstall routine from the Control Panel.
</DL>

<H2><A NAME="Heading46"></A><FONT COLOR="#000077">Hour 23 Exercise</FONT></H2>

<DL>
	<DD>No answer is necessary; no source code changes from the original application.
</DL>

<H2><A NAME="Heading47"></A><FONT COLOR="#000077">Hour 24 Quiz</FONT></H2>

<DL>
	<DD>1. The Internet<BR>
	<BR>
	2. The VB Application Wizard supports both.<BR>
	<BR>
	3. True<BR>
	<BR>
	4. True<BR>
	<BR>
	5. An ISP is used to gain Internet access.<BR>
	<BR>
	6. Only if you want to test the Internet-based application do you need an ISP. In
	most cases, you should have an ISP.<BR>
	<BR>
	7. Java-enabled Web pages are more active than non-Java pages. For example, a Java-enabled
	Web page can contain a multimedia video clip that runs on the user's own computer.
	The Java application's runtime speed is not dependent on download speed because a
	Java application executes on the end user's machine.<BR>
	<BR>
	8. The Web Browser tool requires a toolbar and an Image List.<BR>
	<BR>
	9. False; you must add a logoff routine.<BR>
	<BR>
	10. Click the Back button, display the pull-down URL listbox, type the URL address
	in the text box, or select the Open dialog box and type the URL of the page you just
	browsed.
</DL>

<H2><A NAME="Heading48"></A><FONT COLOR="#000077">Hour 24 Exercise</FONT></H2>

<DL>
	<DD>No answer is necessary as this exercise simply directs a process.
</DL>

<P>
<HR>
</P>
<CENTER>
<P><BR>
<A HREF="apb.htm"><IMG SRC="../buttons/blanprev.gif" WIDTH="37" HEIGHT="37" ALIGN="BOTTOM"
BORDER="0"></A><A HREF="../index.html"><IMG SRC="../buttons/blantoc.gif"
WIDTH="37" HEIGHT="37" ALIGN="BOTTOM" BORDER="0"></A><A HREF="apd.htm"><IMG SRC="../buttons/blannext.gif"
WIDTH="37" HEIGHT="37" ALIGN="BOTTOM" BORDER="0"></A><A HREF="#heading1"><IMG SRC="../buttons/blantop.gif"
WIDTH="37" HEIGHT="37" ALIGN="BOTTOM" BORDER="0"></A>
</CENTER>


</BODY>

</HTML>
