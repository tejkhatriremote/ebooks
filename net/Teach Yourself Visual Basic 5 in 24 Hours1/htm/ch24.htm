<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>

<HEAD>
<!-- This document was created from RTF source by rtftohtml version 3.0.1 -->

	<META NAME="Author" Content="Steph Mineart">
	<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
	<TITLE>Without a title - Title</TITLE>
</HEAD>

<BODY TEXT="#000000" BGCOLOR="#FFFFFF">

<CENTER>
<H1><A HREF="ch23.htm"><IMG SRC="../buttons/blanprev.gif" WIDTH="37" HEIGHT="37"
ALIGN="BOTTOM" BORDER="0"></A><A HREF="../index.html"><IMG SRC="../buttons/blantoc.gif"
WIDTH="37" HEIGHT="37" ALIGN="BOTTOM" BORDER="0"></A><A HREF="apa.htm"><IMG SRC="../buttons/blannext.gif"
WIDTH="37" HEIGHT="37" ALIGN="BOTTOM" BORDER="0"></A></H1>
</CENTER>

<UL>
	<LI><A HREF="#Heading1">Hour 24</A>
	<UL>
		<LI><A HREF="#Heading2">Online Visual Basic</A>
		<UL>
			<LI><A HREF="#Heading3">Follow the Wizard to the Web!</A>
			<UL>
				<LI><A HREF="#Heading4">Figure 24.1.</A>
				<LI><A HREF="#Heading5">Figure 24.2.</A>
				<LI><A HREF="#Heading6">Figure 24.3.</A>
			</UL>
			<LI><A HREF="#Heading7">Your Users Need an ISP</A>
			<LI><A HREF="#Heading8">Using the Browser</A>
			<UL>
				<LI><A HREF="#Heading9">Figure 24.4.</A>
				<LI><A HREF="#Heading10">Figure 24.5.</A>
				<LI><A HREF="#Heading11">Figure 24.6.</A>
				<LI><A HREF="#Heading12">Figure 24.7.</A>
			</UL>
			<LI><A HREF="#Heading13">Looking Through the Other Tools</A>
			<LI><A HREF="#Heading14">Summary</A>
			<LI><A HREF="#Heading15">Q&amp;A</A>
			<LI><A HREF="#Heading16">Workshop</A>
			<UL>
				<LI><A HREF="#Heading17">Quiz</A>
				<LI><A HREF="#Heading18">Exercise</A>
			</UL>
		</UL>
	</UL>
</UL>

<P>
<HR SIZE="4">

<CENTER>
<H2><A NAME="Heading1"></A><FONT COLOR="#000077">Hour 24</FONT></H2>
</CENTER>
<CENTER>
<H2><A NAME="Heading2"></A><FONT COLOR="#000077">Online Visual Basic</FONT></H2>
</CENTER>
<P>If this chapter were written even a month before Microsoft introduced Visual Basic's
version 5, this chapter would be about as long as the entire book! Internet programming
is not simple. If you look through a bookstore, you will see shelf after shelf containing
thick programming guides that teach how to build Internet applications.</P>
<P>Visual Basic programmers have been writing Internet-based programs for a while,
but before version 5, Visual Basic programmers had to do a lot more work than they
now have to do. You'll see that adding Internet Web access requires only that you
follow the steps in a simple wizard.</P>
<P>The highlights of this hour include

<UL>
	<LI>Why both intranet and Internet programming support are vital
	<P>
	<LI>Where to find Internet programming tools in Visual Basic
	<P>
	<LI>How to request Internet support from the VB Application Wizard
	<P>
	<LI>What to expect from the wizard's Web browser
	<P>
	<LI>Which ISP requirements a user needs before he can access the Internet with your
	application
</UL>

<CENTER>
<H3><A NAME="Heading3"></A><FONT COLOR="#000077">Follow the Wizard to the Web!</FONT></H3>
</CENTER>
<P>As mentioned in the introduction, Visual Basic version 5 makes Internet access
extremely simple. Way back in Hour 2, &quot;Analyzing Visual Basic Programs,&quot;
you learned how to start the VB Application Wizard that created an application shell
for you. You now know enough of the Visual Basic language to create a shell and modify
the application with specific code so that the application does work that you need
done.</P>
<P><FONT COLOR="#000077"><B>New Term:</B></FONT><B> </B>An intranet is a localized
version of the Internet and sometimes used as a local area network's protocol system.


<BLOCKQUOTE>
	<P>
<HR>
<A NAME="TIP:"></A><FONT COLOR="#000077"><B>TIP:</B></FONT><B> </B>You can use Visual
	Basic's Internet connections to build routines and applications that access both
	the Internet and your own company's intranet. The intranet is becoming the interface
	of choice by many companies whose employees access the Internet. After all, shouldn't
	the computer down the hall from you be as simple to access as a computer around the
	world? Instead of using a separate networking software solution, many companies prefer
	to leverage their existing Internet tools. You'll be able to build simple intranet
	applications with Visual Basic by the time you finish this lesson. 
<HR>
</P>
	<P>
<HR>
<A NAME="WARNING:"></A><FONT COLOR="#000077"><B>WARNING:</B></FONT><B> </B>You must
	have Microsoft's Internet Explorer 3.0 or later installed on your system before you
	can create Visual Basic applications with Internet access. 
<HR>


</BLOCKQUOTE>

<P>One of the wizard's dialog boxes gives you access to the Internet. Try it yourself
by following these steps:

<DL>
	<DD><B>1.</B> Start a new project.<BR>
	<BR>
	<B>2.</B> From the New Project dialog box (shown in Figure 24.1), double-click VB
	Application Wizard to start the wizard.<BR>
	<BR>
	<B>3.</B> Read the dialog boxes and click Next as you follow the wizard's application
	design. Accept all the default values on each dialog box and pause when you come
	to the dialog box labeled Internet Connectivity (see Figure 24.2).
</DL>

<P><A NAME="Heading4"></A><A HREF="../art/ch24/24cce01.jpg">Figure 24.1.</A><FONT
COLOR="#000077"> </FONT><I>Click here to start the wizard and add Internet support.</I><BR>
<BR>
<A NAME="Heading5"></A><A HREF="../art/ch24/24cce02.jpg">Figure 24.2.</A><FONT COLOR="#000077">
</FONT><I>This wizard dialog box requests Internet support.</I></P>
<P><FONT COLOR="#000077"><B>New Term:</B></FONT><B> </B>A Web browser is a program
that lets you display and interact with colorful Web pages on the Internet.</P>
<P><FONT COLOR="#000077"><B>New Term:</B></FONT><B> </B>URL (for uniform resource
locator) is an Internet Web site address where you can point a Web browser. URLs
generally begin with the <TT>http://</TT> (which stands for Hypertext Transfer Protocol).
URL addresses can also specify an FTP (File Transfer Protocol) document or even another
document that resides on your computer or on another networked disk.

<DL>
	<DD><B>4.</B> Click the Yes option to request Internet support. In addition, enter
	a default URL in the text box. If you don't change the default URL, the Web browser
	will go to Microsoft's home page when the application's user displays the Web browser
	the first time.<BR>
	If your company has a home page, you might want to enter that home page's URL in
	the text box. If you want to make your users really smart, point them to Macmillan
	Publishing's home page at <A HREF="http://www.mcp.com."><TT>http://www.mcp.com</TT>.</A><BR>
	<B><BR>
	5.</B> When you complete the Internet dialog box, continue clicking Next until you
	get to the final wizard dialog box. Click Finish to complete the wizard and watch
	the wizard generate your application. So far, nothing looks different from the wizard
	you used to create an application back in Hour 2.
</DL>

<P>Close the wizard's summary dialog boxes and run the application. Figure 24.3 shows
the resulting Internet-based application.<BR>
<BR>
<A NAME="Heading6"></A><A HREF="../art/ch24/24cce03.jpg">Figure 24.3.</A><FONT COLOR="#000077">
</FONT><I>Where's the Internet?</I></P>
<P>Obviously, something is wrong because the application does not look anything like
the Internet. When you ran the wizard, you accepted a lot of dialog box default values.
The wizard did not generate only an Internet application, but an application that
happens to contain Internet access.</P>
<P>Select View | Web Browser. The application will load the Web broswer form and
send the application to the Internet through your ISP.
<CENTER>
<H3><A NAME="Heading7"></A><FONT COLOR="#000077">Your Users Need an ISP</FONT></H3>
</CENTER>
<P>An ISP (or Internet service provider) is an Internet service that you and your
users use to connect to the Internet. You might even work for a company that contains
the hardware needed to be its own ISP. If your PC has Internet access, you'll have
no trouble using the application you create.</P>
<P>Therefore, when you distribute your application, if the application has Internet
access, you'll need to warn the users that they, too, must have an ISP to use the
application with the Internet. Again, if your users are workers within your own company
that already provides Internet access to PCs, you'll have no problems with distributing
your applications.
<CENTER>
<H3><A NAME="Heading8"></A><FONT COLOR="#000077">Using the Browser</FONT></H3>
</CENTER>
<P>When you select View | Web Browser with your generated application, your application
will attempt to make an Internet connection through your ISP. Generally, this means
that you'll have to log on to the Internet by issuing your username and password.
For example, if you subscribe to the Internet using the Microsoft Network online
service, you'll see Figure 24.4's Sign In dialog box right after you select View
| Web Browser.<BR>
<BR>
<A NAME="Heading9"></A><A HREF="../art/ch24/24cce04.jpg">Figure 24.4.</A><FONT COLOR="#000077">
</FONT><I>You must connect to your ISP.</I></P>
<P>Obviously, anyone who runs your application must also log in to his ISP, and his
ISP login dialog box will appear in place of Figure 24.4's Microsoft Network Sign
In dialog box if he uses a different ISP.</P>
<P>Once you (or your application's user) log in to the ISP, the application displays
the Web browser and the Web page you set as the default, as shown in Figure 24.5.</P>
<P>The Web broswer includes the standard browsing tools that you are used to if you've
ever used a browser. You can perform all the following tasks from your application's
browser:

<UL>
	<LI>You (or your application's user) can click on the Web page's hotspots to jump
	to related Web pages.
	<P>
	<LI>You can enter a new URL in the Address text box to see a different site.
	<P>
	<LI>You can browser backward through the pages you've seen by clicking the toolbar's
	Back button.
	<P>
	<LI>Once you back up, you can return to a Web page by clicking the toolbar's Forward
	button.
</UL>

<P><A NAME="Heading10"></A><A HREF="../art/ch24/24cce05.jpg">Figure 24.5.</A><FONT
COLOR="#000077"> </FONT><I>Your application now contains a Web browser.</I>

<UL>
	<LI>If a Web page takes a long time to load its graphics, you can click the toolbar's
	Stop button to freeze the page at its current loaded state. (Usually the text will
	load long before all the graphics load and you may not need to view the rest of the
	page's graphics.)
	<P>
	<LI>You can refresh a Web page that you've stopped from loading or refresh to see
	new information by clicking the toolbar's Refresh button.
	<P>
	<LI>The toolbar's Home button takes you to the home page set up for your ISP (not
	the URL you entered in the wizard's text box). You can select View | Options | Navigation
	to set a different home page.
	<P>
	<LI>Click the toolbar's Search button to locate other sites on the Internet. The
	search site used will be the one defined for your ISP or one that you enter in the
	View | Options | Navigation dialog box.
</UL>

<P>All this is possible and you never coded one programming statement to gain the
Internet functionality!</P>
<P><FONT COLOR="#000077"><B>New Term:</B></FONT><B> </B>Java is a Web-based programming
language similar to C++. Java adds interactivity to a Web page.


<BLOCKQUOTE>
	<P>
<HR>
<A NAME="NOTE:"></A><FONT COLOR="#000077"><B>NOTE:</B></FONT><B> </B>The browser
	the wizard generated is Java enabled because it is based on Internet Explorer, which
	is Java enabled. Your application will not get all the functionality of the full-functioned
	Internet Explorer, but you will get most of the vital features such as Java and Web
	browsing. 
<HR>
<BR>
	
<HR>
<A NAME="TIP:"></A><FONT COLOR="#000077"><B>TIP:</B></FONT><B> </B>Click the browser's
	drop-down Address text box, shown in Figure 24.6, to go back to any specific Web
	page you've visited during your browsing session. 
<HR>


</BLOCKQUOTE>

<P><A NAME="Heading11"></A><A HREF="../art/ch24/24cce06.jpg">Figure 24.6.</A><FONT
COLOR="#000077"> </FONT><I>You can review the sites you've visited.</I><BR>
<BR>
<FONT COLOR="#000077"><B>New Term:</B></FONT><B> </B>VBScript is a Web page scripting
language that you can use to activate Web pages and add intelligence to Web page
design and interaction with the user.</P>
<P>By the way, now that you've mastered Visual Basic, you know almost everything
there is to know about VBScript. Therefore, you'll be able to work as a Web page
programmer with just a little extra training in VBScript and HTML coding. For a great
text that explains how to use VBScript, get a copy of either Teach Yourself VBScript
in 21 Days or Laura Lemay's Web Workshop: ActiveX and VBScript (both by Sams.net
Publishing).</P>
<P>When you finish browsing the Web, you can close the Browser window and continue
with your application. Obviously, the wizard's application is still just a shell.
Nevertheless, the most functional part of the application is the Web browser, and
you can see how simple Visual Basic makes it to drop a browser into an application.


<BLOCKQUOTE>
	<P>
<HR>
<A NAME="WARNING:"></A><FONT COLOR="#000077"><B>WARNING:</B></FONT><B> </B>Did you
	notice how many new tools the wizard added to your Toolbox window to support the
	Web browser? Close the application and look at the toolbox. You'll see additional
	tools, labeled in Figure 24.7, that help the application do its tasks. Although the
	Web browser is simple, the wizard did put its parts together. Although Visual Basic
	supplies a Web Browser tool (see Figure 24.7), the tool requires other support tools
	to have an object such as the drop-down Address list box. 
<HR>


</BLOCKQUOTE>

<P><A NAME="Heading12"></A><A HREF="../art/ch24/24cce07.jpg">Figure 24.7.</A><FONT
COLOR="#000077"><I> </I></FONT><I>The Web Browser tool requires several controls
to do its job.</I>


<BLOCKQUOTE>
	<P>
<HR>
<A NAME="TIP:"></A><FONT COLOR="#000077"><B>TIP:</B></FONT><B> </B>To help your application's
	users, you'll need to add more features to the Web browsing portion of your application.
	For example, the application does not have a logoff feature. Perhaps you could add
	a menu to the browser and include common options found in most browsing menus. 
<HR>


</BLOCKQUOTE>

<CENTER>
<H3><A NAME="Heading13"></A><FONT COLOR="#000077">Looking Through the Other Tools</FONT></H3>
</CENTER>
<P>When you select Project | Components and look through the list of tools you can
add to the Toolbox window, you'll find several Internet-related tools. For example,
all the controls that begin with the words Internet Explorer are Internet Explorer-like
controls you can add to an application. Table 24.1 describes these tools briefly.</P>
<CENTER>
<P><B>Table 24.1. Internet and Microsoft Internet Explorer-related components. </B>
<TABLE BORDER="0">
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><B><I>Component</I></B></TD>
		<TD ALIGN="LEFT" VALIGN="TOP"><B><I>Description</I></B></TD>
	</TR>
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><TT>IE Animated Button</TT></TD>
		<TD ALIGN="LEFT" VALIGN="TOP">An animated display showing Internet Explorer's connection.</TD>
	</TR>
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><TT>IE Popup Menu</TT></TD>
		<TD ALIGN="LEFT" VALIGN="TOP">A menu control that appears on the Web page.</TD>
	</TR>
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><TT>IE Popup Window</TT></TD>
		<TD ALIGN="LEFT" VALIGN="TOP">A tabbed window control that opens a new connection window.</TD>
	</TR>
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><TT>IE Preloader</TT></TD>
		<TD ALIGN="LEFT" VALIGN="TOP">A control that preloads a site before the visible Internet access begins.</TD>
	</TR>
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><TT>IE Super Label</TT></TD>
		<TD ALIGN="LEFT" VALIGN="TOP">A Web page label.</TD>
	</TR>
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><TT>IE Timer</TT></TD>
		<TD ALIGN="LEFT" VALIGN="TOP">A clock control that provides timing operations for Internet services.</TD>
	</TR>
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><TT>Microsoft Internet Controls</TT></TD>
		<TD ALIGN="LEFT" VALIGN="TOP">The Web browser control you used in the previous wizard's application.</TD>
	</TR>
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><TT>Microsoft Internet Transfer Control 5.0</TT></TD>
		<TD ALIGN="LEFT" VALIGN="TOP">The transfer protocol control to transfer files between Internet computers.</TD>
	</TR>
	<TR ALIGN="LEFT" rowspan="1">
		<TD ALIGN="LEFT" VALIGN="TOP"><TT>Microsoft Winsock Control 5.0</TT></TD>
		<TD ALIGN="LEFT" VALIGN="TOP">The Windows connection to common Internet protocols.</TD>
	</TR>
</TABLE>
</P>
</CENTER>
<P>FTP stands for File Transfer Protocol and refers to one computer's capability
to log on to the Internet and exchange files with another user's computer.</P>
<P>WinSock is the Windows interface to an Internet program.</P>
<P>You'll also find several FTP and WinSock controls that help you encapsulate advanced
Internet applications into packages you can use as a standalone Web browser or, more
commonly, as a Web browser you can make available in the middle of your application
for your application's users to use when needed. These extra controls are fairly
advanced, so read the extensive online documentation that Visual Basic provides for
Web applications in the Books Online reference sets.


<BLOCKQUOTE>
	<P>
<HR>
<A NAME="WARNING:"></A><FONT COLOR="#000077"><B>WARNING:</B></FONT><B> </B>If you
	use Visual Basic's Standard Edition, you will not have these tools available to you.
	Nevertheless, you can purchase the tools from Microsoft, upgrade Visual Basic to
	the Professional or Enterprise Edition (better), or hunt through your online service
	and the Internet for free Internet controls you can download and drop into a project
	when you need it (best). As long as the controls are ActiveX controls, you can use
	them in Visual Basic 5. 
<HR>


</BLOCKQUOTE>

<CENTER>
<H3><A NAME="Heading14"></A><FONT COLOR="#000077">Summary</FONT></H3>
</CENTER>
<P>In this hour you have quickly learned how to achieve Internet and intranet connectivity
from within the Visual Basic applications you write. If your application needs a
Web browser, the VB Application Wizard will take care of the details. If you need
more, you can add additional functionality to your application.</P>
<P>This hour's lesson completes this 24-hour tutorial. You should take a few days'
rest before returning to the keyboard to write the next killer application that outsells
Microsoft Office. Good luck with Visual Basic and with your programming future!
<CENTER>
<H3><A NAME="Heading15"></A><FONT COLOR="#000077">Q&amp;A</FONT></H3>
</CENTER>

<DL>
	<DD><B>Q Why does Visual Basic come with all the Internet Explorer controls?<BR>
	<BR>
	A</B> The VB Application Wizard does not add a comprehensive Web browser to an application.
	Instead, the VB Application Wizard adds a usable Web browser that works well as a
	drop-in tool but performs with mediocrity as a standalone Web browser or as a full-featured
	browser. Therefore, you may be able to incorporate the other controls into the final
	application you build.
</DL>

<CENTER>
<H3><A NAME="Heading16"></A><FONT COLOR="#000077">Workshop</FONT></H3>
</CENTER>
<P>The quiz questions and exercises are provided for your further understanding.
See Appendix C, &quot;Answers,&quot; for answers.
<CENTER>
<H4><A NAME="Heading17"></A><FONT COLOR="#000077">Quiz</FONT></H4>
</CENTER>

<DL>
	<DD><B>1.</B> Which has the broader scope: an intranet or the Internet?<BR>
	<B><BR>
	2.</B> Which online connection--an Internet, an intranet, or both--can the VB Application
	Wizard support?<BR>
	<B><BR>
	3.</B> True or false: The computer on which you develop your Visual Basic application
	with Internet support must have Internet Explorer 3 or later.<BR>
	<B><BR>
	4.</B> True or false: The computer on which your application executes must have Internet
	Explorer 3 or later.<BR>
	<B><BR>
	5.</B> What is an ISP used for?<BR>
	<B><BR>
	6.</B> True or false: The computer on which you develop your Visual Basic application
	with Internet support must have an ISP.<BR>
	<B><BR>
	7.</B> What makes a Java-enabled Web page different from one that has no Java code?<BR>
	<B><BR>
	8.</B> Why are extra support tools needed when an application already uses the Web
	Browser tool from the Toolbox window?<BR>
	<B><BR>
	9. </B>True or false: The VB Application Wizard generates a Web browser that you
	can use to log on to the Internet's Web pages. When you finish viewing the Web pages,
	you can click a button to log off the browser but remain inside the generated application's
	code.<BR>
	<B><BR>
	10. </B>What are three ways to display a Web page you previously displayed from the
	Web browser in the same session?
</DL>

<CENTER>
<H4><A NAME="Heading18"></A><FONT COLOR="#000077">Exercise</FONT></H4>
</CENTER>
<P>Use File | Print to print all the Web browser form's code. You'll see that the
wizard generated a lot of code and that some of the code is fairly tricky. By studying
the code, you'll see that these Internet controls can be difficult to program and
that the wizard takes a lot of that difficult task off your shoulders.</P>
<CENTER>
<P><A HREF="ch23.htm"><IMG SRC="../buttons/blanprev.gif" WIDTH="37" HEIGHT="37" ALIGN="BOTTOM"
BORDER="0"></A><A HREF="../index.html"><IMG SRC="../buttons/blantoc.gif"
WIDTH="37" HEIGHT="37" ALIGN="BOTTOM" BORDER="0"></A><A HREF="apa.htm"><IMG SRC="../buttons/blannext.gif"
WIDTH="37" HEIGHT="37" ALIGN="BOTTOM" BORDER="0"></A>
</CENTER>


</BODY>

</HTML>
